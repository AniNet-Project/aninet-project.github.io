{"version":3,"sources":["Header.tsx","Footer.tsx","ImportDialog.tsx","utils.ts","edgeMarkup.ts","DraggablePaper.tsx","Customs.tsx","EdgeMarkDialog.tsx","ToolBar.tsx","ViewDialogs.tsx","InfoBoard.tsx","CircularProgressWithLabel.tsx","NetView.tsx","TimeSlider.tsx","EditGrid.js","Comments.tsx","NetPage.tsx","CodeBlock.tsx","DocPage.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Header","className","href","this","props","title","React","Component","Busuanzi","window","location","endsWith","id","Footer","ImportDialog","state","open","sourceUrl","items","selected","setState","length","loadSource","event","target","value","fetch","then","res","json","data","error","console","log","newValue","url","newInfo","info_a","info_b","new_","Object","assign","entries","categories","k","v","nodes","concat","n","edges","e","values","push","mergeInfo","info","setInfo","handleClose","loadItem","onClick","handleClickOpen","Dialog","onClose","aria-labelledby","DialogTitle","DialogContent","Typography","gutterBottom","InputBase","onChange","sourceChanged","placeholder","Autocomplete","onSelectedChange","options","getOptionLabel","item","name","renderInput","params","TextField","label","variant","DialogActions","Button","color","handleClickConfirm","symbols","RegExp","Label","P","map","s","ExplicitLabel","ExplicitID","Obj","dash","rightArrow","leftArrow","EdgeLabel","l","UndirectedEdge","left","from","to","directed","DirectedRightEdge","DirectedLeftEdge","LineParser","handle","cancel","Paper","CustomSwitch","withStyles","switchBase","backgroundColor","checked","track","Switch","EdgeMarkDialog","content","markers","showId","setText","texts","direction","label_from","queryNodes","label_to","lines","split","idx","tipText","line","replace","parse","status","nodes_from","nodes_to","startRow","endRow","startCol","endCol","type","n_from","n_to","edge","tip","document","getElementById","innerHTML","style","fontSize","processLines","err","refresh","PaperComponent","DraggablePaper","cursor","DialogContentText","FormControlLabel","control","showIdChange","labelPlacement","mode","theme","textChanged","bind","width","height","ref","handleClickRefersh","buildFileSelector","fileSelector","createElement","setAttribute","addEventListener","file","files","reader","FileReader","onload","JSON","result","undefined","readAsText","UploadBtn","handleFileSelect","preventDefault","click","ToolBar","objectData","fileName","navigator","msSaveOrOpenBlob","blob","Blob","decodeURIComponent","encodeURI","stringify","a","download","encodeURIComponent","body","appendChild","removeChild","exportToJson","EditOptionsDialog","setTextArea","opt","getOpt","setOpt","ta","border","Tooltip","placement","rows","cols","SearchDialog","queryText","q","queryAndFocus","key","handleClickSearch","onKeyPress","handlePressEnter","IconButton","FilterDialog","reverse","queryAndFilter","reset","handleClickFilter","handleClickReset","Checkbox","handleChangeReverse","defaultOpt","oldOpt","atlas","physics","solver","forceAtlas2Based","gravitationalConstant","centralGravity","springLength","springConstant","font","size","GravitationalConstantSlider","useState","setValue","Slider","min","max","valueLabelDisplay","SpringConstantSlider","Math","log10","newVal","step","valueLabelFormat","PhysicsSwitch","enabled","HiddenEdgeLabelSwitch","TuneDialog","InforBoardSwitch","switchState","setSwitch","HiddenUnselectedSwitch","SettingDialog","inforBoardSwitch","setInforBoardSwitch","hiddenUnselectedSwitch","setHiddenUnselectedSwitch","node","pos","cat","cats","categorie","boardStyle","top","y","x","catStyle","close","src","image","alt","str","limit","slice","shorterString","link","Box","position","display","CircularProgress","bottom","right","alignItems","justifyContent","component","round","getCanvas","getElementsByTagName","DefaultNetStyle","ViewControl","fullScreenMode","setFullScreenMode","oriHeight","turnBackSize","captureImg","exitFullscreen","canvas","fullRegion","requestFullscreen","clientHeight","screen","fullscreenElement","DEFAULT_NETWORK_OPTIONS","autoResize","shape","stabilization","inherit","interaction","hideEdgesOnDrag","hover","multiselect","NetView","infoBoard","loadingRatio","netRef","createRef","netOptions","oldNodes","on","oldState","resetNodes","hiddenNonSelected","node_id","current","network","getNodeAt","pointer","DOM","select_node","create_board","find","InfoBoard","board","handlePopup","handleHidden","setOptions","setNetOptions","registerLoading","createLoadindBar","handleClick","catgories","borderWidth","createNode","arrows","createEdge","self","ratio","iterations","total","once","context","getContext","save","globalCompositeOperation","fillStyle","fillRect","restore","toDataURL","selectNodes","nodes_id","String","fit","animation","focus","scale","setNodes","getSelectedNodes","closure","Set","nid","add","parseInt","connected","getConnectedNodes","nid2","getSelectedClosure","has","createNetwork","getNetOptions","queryNodesAndFocus","queryNodesAndFilter","useStyles","makeStyles","createStyles","root","margin","spacing","timePoints","classes","i","marks","t","defaultValue","time","setTime","commandComponents","onExecute","textAlign","edit","delete","confirm","commit","Command","CommandButton","availableValues","LookupEditCell","lookupEditCell","padding","dialog","inputRoot","selectMenu","availableColumnValues","onValueChange","TableCell","Select","MenuProps","input","Input","MenuItem","EditCell","column","Cell","getRowId","row","createGrid","colDef","getParentState","widthDef","colOrder","defaultDef","setParentState","columns","tableColumnExtensions","sorting","editingRowIds","addedRows","rowChanges","currentPage","pageSize","pageSizes","columnOrder","leftFixedColumns","TableEditColumn","COLUMN_TYPE","totalSummaryItems","defaultRow","keys","deletedIds","rowsForDelete","forEach","rowId","index","findIndex","splice","changedRows","added","changed","deleted","startingAddedId","deleteRows","nextProps","newRows","onSortingChange","onCurrentPageChange","c","onPageSizeChange","onEditingRowIdsChange","ids","onRowChangesChange","onAddedRowsChange","changeAddedRows","onCommitChanges","commitChanges","totalItems","columnExtensions","order","onOrderChange","showSortingControls","cellComponent","showAddCommand","showEditCommand","showDeleteCommand","commandComponent","leftColumns","NodeGrid","columnName","r","EdgeGrid","e_","setEdges","CatGrid","reprCats","setCats","recoverCats","Comments","script","anchor","issueTerm","Accordion","AccordionSummary","expandIcon","aria-controls","AccordionDetails","NetPage","isLoaded","timesInfo","currentTime","nodeCache","timepoints","Array","Promise","all","resp","infos_","infos","new_nodes","preProcessInfo","cache","times","query_type","query_text","trim","toggle","cond","pattern","val","test","message","forceRender","setCategories","TimeSlider","setCurrentTime","CodeBlock","language","PureComponent","defaultProps","DocPage","text","source","renderers","code","escapeHtml","Card","titleImg","NewCard","Cards","Home","App","basename","exact","path","Boolean","hostname","match","ReactDOM","render","StrictMode","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.ad792e84.chunk.js","sourcesContent":["import React from 'react'\r\n\r\ntype HeaderProps = {\r\n  title: string;\r\n}\r\n\r\nexport default class Header extends React.Component<HeaderProps, object> {\r\n  render() {\r\n    return (\r\n      <header>\r\n        <div className=\"page-title\">\r\n          <div className=\"container\">\r\n            <div className=\"topbar\">\r\n              <div className=\"links\">\r\n                <a href=\"#/contribute\">\r\n                  如何贡献\r\n                </a>\r\n                <a href=\"#/about\">\r\n                  关于\r\n                </a>\r\n                <a href=\"https://github.com/AniNet-Project\">\r\n                  GitHub\r\n                </a>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"container title\">\r\n            <p className=\"sub\">\r\n              <a href=\"/\">\r\n                AniNet\r\n              </a>\r\n            </p>\r\n            <h1>{this.props.title}</h1>\r\n          </div>\r\n        </div>\r\n      </header>\r\n    )\r\n  }\r\n}\r\n","import React from 'react'\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\nimport EmailIcon from '@material-ui/icons/Email';\r\n\r\n\r\nconst Busuanzi = () => {\r\n  const isHome = window.location.href.endsWith('#/')\r\n  if (isHome) {\r\n    return (\r\n      <div className=\"busuanzi\">\r\n        <span id=\"busuanzi_container_site_pv\"> 本站总访问量<span id=\"busuanzi_value_site_pv\"></span>次 </span>\r\n      </div>\r\n    )\r\n  } else {\r\n    return (\r\n      <></>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default class Footer extends React.Component<object, object> {\r\n  render() {\r\n    return (\r\n      <div className=\"footer\">\r\n        <div className=\"container\">\r\n          <a href=\"https://github.com/AniNet-Project\">\r\n            <GitHubIcon/>\r\n          </a>\r\n          <a href=\"mailto:nanguage@yahoo.com\">\r\n            <EmailIcon id=\"email-icon\"/>\r\n          </a>\r\n\r\n          <Busuanzi/>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React from 'react'\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport InputBase from '@material-ui/core/InputBase';\nimport Typography from '@material-ui/core/Typography';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport TextField from '@material-ui/core/TextField';\n\n\nimport { mergeInfo } from './utils'\nimport { SourceItem, ItemInfo } from './datatypes'\n\n\ntype setInfoMth = (info: ItemInfo) => void\n\ntype ImportDialogProps = {\n  setInfo: setInfoMth,\n  info: ItemInfo,\n}\ntype ImportDialogState = {\n  open: boolean,\n  sourceUrl: string,\n  items: Array<SourceItem>,\n  selected: null | SourceItem\n}\n\n\nexport default class ImportDialog extends React.Component<ImportDialogProps, ImportDialogState> {\n\n  constructor(props: ImportDialogProps) {\n    super(props)\n    this.state = {\n      open: false,\n      sourceUrl: \"https://raw.githubusercontent.com/AniNet-Project/crawler/master/data/bgm.json\",\n      items: [],\n      selected: null,\n    }\n  }\n\n  handleClickOpen() {\n    this.setState({open: true})\n    if (this.state.items.length === 0) {\n      this.loadSource()\n    }\n  };\n\n  handleClose() {\n    this.setState({open: false})\n  };\n\n  sourceChanged(event: any) {\n    this.setState({\n      sourceUrl: event.target.value\n    })\n    this.loadSource()\n  }\n\n  loadSource() {\n    fetch(this.state.sourceUrl)\n      .then(res => res.json())\n      .then(data => {\n        this.setState({\n          items: data.data\n        })\n      },\n      (error) => {\n        console.log(error)\n        this.setState({\n          items: []\n        })\n      })\n  }\n\n  onSelectedChange(event: any, newValue: SourceItem | null) {\n    this.setState({\n      selected: newValue\n    })\n  }\n\n  loadItem() {\n    if (this.state.selected === null) {return}\n    const url = this.state.selected.data\n    fetch(url)\n      .then(res => res.json())\n      .then(data => {\n        const newInfo = mergeInfo(this.props.info, data)\n        this.props.setInfo(newInfo)\n      },\n      (error) => {\n        console.log(error)\n      })\n    this.handleClose()\n  }\n\n  handleClickConfirm() {\n    this.loadItem()\n  }\n\n  render() {\n    return (\n      <>\n        <button onClick={() => this.handleClickOpen()}>导入预定义数据</button>\n        <Dialog open={this.state.open} onClose={() => {this.handleClose()}} aria-labelledby=\"form-dialog-title\">\n          <DialogTitle id=\"form-dialog-title\">从数据源导入</DialogTitle>\n\n          <DialogContent id=\"importDialog\">\n            <Typography gutterBottom>\n              数据源\n            </Typography>\n            <InputBase\n              value={this.state.sourceUrl}\n              onChange={(e) => this.sourceChanged(e)}\n              placeholder=\"请输入数据源索引文件 URL\"\n            />\n            <Typography gutterBottom>\n              条目\n            </Typography>\n            <Autocomplete\n              value={this.state.selected}\n              onChange={(e, n) => {this.onSelectedChange(e, n)}}\n              id=\"import-items-filter\"\n              options={this.state.items}\n              getOptionLabel={(item: SourceItem) => item.name}\n              renderInput={(params: any) => <TextField {...params} label=\"筛选\" variant=\"outlined\" />}\n            />\n\n            <DialogActions>\n              <Button onClick={() => {this.handleClose()}} color=\"primary\">\n                取消\n              </Button>\n              <Button onClick={() => {this.handleClickConfirm()}} color=\"primary\">\n                确定\n              </Button>\n            </DialogActions>\n          </DialogContent>\n        </Dialog>\n      </>\n    )\n  }\n\n}\n\n","import { ItemInfo, NodeType, EdgeType } from \"./datatypes\";\r\n\r\nconst exportToJson = (objectData: any, fileName: string) => {\r\n  let contentType = \"application/json;charset=utf-8;\";\r\n  if (window.navigator && window.navigator.msSaveOrOpenBlob) {\r\n    var blob = new Blob([decodeURIComponent(encodeURI(JSON.stringify(objectData)))], { type: contentType });\r\n    navigator.msSaveOrOpenBlob(blob, fileName);\r\n  } else {\r\n    var a = document.createElement('a');\r\n    a.download = fileName;\r\n    a.href = 'data:' + contentType + ',' + encodeURIComponent(JSON.stringify(objectData, null, 2));\r\n    a.target = '_blank';\r\n    document.body.appendChild(a);\r\n    a.click();\r\n    document.body.removeChild(a);\r\n  }\r\n}\r\n\r\n\r\nconst shorterString = (str: string, limit: number) => {\r\n  let res = \"\" + str\r\n  if (str.length > limit) {\r\n    res = str.slice(0, limit) \r\n    res += \"...\"\r\n  }\r\n  return res\r\n}\r\n\r\nconst mergeInfo = (info_a: ItemInfo, info_b: ItemInfo) => {\r\n  let new_ = Object.assign({}, info_a)\r\n  for (const [k, v] of Object.entries(info_b.categories)) {\r\n    new_.categories[k] = v\r\n  }\r\n  let nodes: Record<number, NodeType> = {} \r\n  for (const n of info_a.data.nodes.concat(info_b.data.nodes)) {\r\n    nodes[n.id] = n;\r\n  }\r\n  let edges: Record<number, EdgeType> = {} \r\n  for (const e of info_a.data.edges.concat(info_b.data.edges)) {\r\n    edges[e.id] = e;\r\n  }\r\n  new_.data.nodes = []\r\n  for (const n of Object.values(nodes)) {new_.data.nodes.push(n)}\r\n  new_.data.edges = []\r\n  for (const e of Object.values(edges)) {new_.data.edges.push(e)}\r\n  return new_\r\n}\r\n\r\n\r\nexport {exportToJson, shorterString, mergeInfo}\r\n","/*\nImplement the Parser of a Simple Edge Markup Language(SEML).\n\nThe synatax like these:\n\n1. For undirected edges:\n\nDio-敌人-承太郎\n花京院-朋友-承太郎\n\n2. For directed edges:\n\n乔瑟夫-祖父->承太郎\n承太郎<-父亲-徐伦\n\n3. explicit query type:\n\n(id:1)-朋友-(id:2)\n\n*/\n\nimport * as P from 'parsimmon'\n\n\ntype QueryHint = string\nexport type QueryEdge = {\n  label: string,\n  from: QueryHint,\n  to: QueryHint,\n  directed: boolean,\n}\n\nconst puncs = \"\\/,\\.·!@#$%^&*！？｡＂＃＄％＆＇（）＊＋，－／：；＜＝＞＠［＼］＾＿｀｛｜｝～｟｠｢｣､、〃》「」『』【】〔〕〖〗〘〙〚〛〜〝〞〟〰〾〿–—‘’‛“”„‟…‧﹏.\t\"\nconst symbols = new RegExp(\"[a-zA-Z0-9\\u4e00-\\u9fa5\"+puncs+\"]+\")\n\nconst Label: P.Parser<QueryHint> =\n  P.regexp(symbols)\n   .map(s => s)\n\nconst ExplicitLabel: P.Parser<QueryHint> =\n  P.seq(P.string(\"(label:\"), Label, P.string(\")\"))\n   .map(\n     ([_l, label, _r]) => label\n   )\n\nconst ExplicitID: P.Parser<QueryHint> =\n  P.seq(P.string(\"(id:\"), P.regex(/[0-9]+/), P.string(\")\"))\n   .map(\n     ([_l, id, _r]) => \"id:\"+id\n   )\n\nconst Obj: P.Parser<QueryHint> =\n  P.alt(\n    ExplicitLabel,\n    ExplicitID,\n    Label,\n  )\n\n\nconst dash = P.regex(/-+/)\nconst rightArrow = P.seq(dash, P.string(\">\"))\nconst leftArrow = P.seq(P.string(\"<\"), dash)\n\n\nconst EdgeLabel = P.alt(\n\n  P.seq(\n    P.string(\"(\"),\n    P.alt(Label, P.string(\"\")),\n    P.string(\")\"))\n  .map(([_l, l, _r]) => l),\n\n  Label,\n)\n\n\nconst UndirectedEdge: P.Parser<QueryEdge> = \n  P.seq(Obj, dash, EdgeLabel, dash, Obj)\n   .map(\n     ([left, _1, label, _2, right]) => {\n       return {\n         label: label,\n         from: left,\n         to: right,\n         directed: false\n       }\n     }\n   )\n\nconst DirectedRightEdge: P.Parser<QueryEdge> = \n  P.seq(Obj, dash, EdgeLabel, rightArrow, Obj)\n   .map(\n     ([left, _1, label, _2, right]) => {\n       return {\n         label: label,\n         from: left,\n         to: right,\n         directed: true\n       }\n     }\n   )\n\nconst DirectedLeftEdge: P.Parser<QueryEdge> = \n  P.seq(Obj, leftArrow, EdgeLabel, dash, Obj)\n   .map(\n     ([left, _1, label, _2, right]) => {\n       return {\n         label: label,\n         from: right,\n         to: left,\n         directed: true\n       }\n     }\n   )\n\nconst LineParser: P.Parser<QueryEdge> =\n  P.seq(\n    P.regex(/[ \\t]*/),\n    P.alt(\n      UndirectedEdge,\n      DirectedLeftEdge,\n      DirectedRightEdge,\n    ),\n    P.regex(/[ \\t]*/),\n  )\n  .map(\n    ([_l, e, _r]) => e\n  )\n\nexport {LineParser}\n","import React from 'react'\nimport Draggable from 'react-draggable';\nimport Paper, { PaperProps } from '@material-ui/core/Paper';\n\nexport default (props: PaperProps) => {\n  return (\n    <Draggable handle={\"#\"+props[\"aria-labelledby\"]} cancel={'[class*=\"MuiDialogContent-root\"]'}>\n      <Paper {...props} />\n    </Draggable>\n  );\n}\n\n","\nimport Switch from '@material-ui/core/Switch';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst CustomSwitch = withStyles({\n  switchBase: {\n    color: \"#3f51b5\",\n    '&$checked': {\n      color: \"#3f51b5\",\n    },\n    '&$checked + $track': {\n      backgroundColor: \"#3f51b5\",\n    },\n  },\n  checked: {},\n  track: {},\n})(Switch);\n\n\nexport {CustomSwitch}\n","import React from 'react'\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport AceEditor from \"react-ace\";\n\nimport \"ace-builds/src-noconflict/mode-java\";\nimport \"ace-builds/src-noconflict/theme-github\";\n\nimport { ItemInfo, NodeType } from './datatypes'\nimport { LineParser } from './edgeMarkup'\nimport DraggablePaper from './DraggablePaper'\nimport { CustomSwitch } from './Customs'\n\n\ntype Props = {\n  info: ItemInfo,\n  setInfo: (info:ItemInfo) => void,\n  queryNodes: (q: string, reverse: boolean) => Array<NodeType>\n}\ntype State = {\n  open: boolean,\n  content: string,\n  markers: Array<any>,\n  showId: boolean,\n}\n\n\nexport default class EdgeMarkDialog extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props)\n    this.state = {\n      open: false,\n      content: \"\",\n      markers: [],\n      showId: false,\n    }\n  }\n\n  handleClickOpen() {\n    this.setText()\n    this.setState({open: true})\n  };\n\n  handleClose() {\n    this.setState({open: false})\n  };\n\n  textChanged(newValue: any) {\n    this.setState({\n      content: newValue\n    })\n  }\n\n  setText() {\n    let texts = \"\"\n    for (const e of this.props.info.data.edges) {\n      if (this.state.showId === true) {\n        texts += \"(id:\" + e.from + \")\" +\n                 \"--\" + e.label + (e.direction === false ? \"--\" : \"-->\" ) +\n                 \"(id:\" + e.to + \")\\n\"\n      } else {\n        const label_from = this.props.queryNodes(\"id:\"+e.from, false)[0].label\n        const label_to = this.props.queryNodes(\"id:\"+e.to, false)[0].label\n        texts += label_from +\n                 \"--\" + e.label + (e.direction === false ? \"--\" : \"-->\" ) +\n                 label_to + \"\\n\"\n      }\n    }\n    this.setState({\n      content: texts\n    })\n  }\n\n  showIdChange(e: any) {\n    this.setState({\n      showId: e.target.checked\n    }, () => {\n      this.setText()\n    })\n  }\n\n  processLines() {\n    const lines = this.state.content.split(/\\r?\\n/)\n    let edges = []\n    let markers = []\n    let idx = 0\n    let tipText = \"\"\n\n    for (const line of lines) {\n      if (line.replace(/^\\s+|\\s+$/g, '').length === 0) {\n        continue\n      }\n      const res = LineParser.parse(line)\n      if (res.status === true) {\n        const e = res.value\n        // query from\n        const nodes_from = this.props.queryNodes(e.from, false)\n        const nodes_to = this.props.queryNodes(e.to, false)\n        if ((nodes_from.length >= 1) && (nodes_to.length >= 1)) {\n          if ((nodes_from.length > 1) || (nodes_to.length > 1)) {\n            // ambiguous label\n            markers.push({\n              startRow: idx,\n              endRow: idx,\n              startCol: 0,\n              endCol: line.length,\n              className: 'mark-query-ambiguous',\n              type: \"text\",\n            })\n            tipText += \"含有带有歧义的标签。\"\n          }\n          const n_from = nodes_from[0]\n          const n_to = nodes_to[0]\n          const edge = {\n            id: idx,\n            from: n_from.id,\n            to: n_to.id,\n            label: e.label,\n            direction: e.directed,\n          }\n          edges.push(edge)\n        } else {\n          // query error\n          markers.push({\n            startRow: idx,\n            endRow: idx,\n            startCol: 0,\n            endCol: line.length,\n            className: 'mark-query-error',\n            type: \"text\",\n          })\n          tipText += \"含有无法匹配的标签。\"\n        }\n      } else {\n        // syntax error\n        markers.push({\n          startRow: idx,\n          endRow: idx,\n          startCol: 0,\n          endCol: line.length,\n          className: 'mark-syntax-error',\n          type: \"text\",\n        })\n        tipText += \"含有错误的语法。\"\n      }\n      idx += 1;\n    }\n    let info = Object.assign({}, this.props.info)\n    info.data.edges = edges\n    this.props.setInfo(info)\n    this.setState({\n      markers: markers\n    })\n\n    if (tipText.length > 0) { tipText+=\"请检查！\" }\n    let tip = document.getElementById(\"edit-edgemark-tips\")\n    if (tip !== null) {\n      tip.innerHTML = tipText\n      tip.style.color = \"#ff3333\"\n      tip.style.fontSize = \"10px\"\n    }\n  }\n\n  refresh() {\n    try {\n      this.processLines()\n    } catch(err) {\n      console.log(err)\n    }\n  }\n\n  handleClickConfirm() {\n    this.refresh()\n    this.handleClose()\n  }\n\n  handleClickRefersh() {\n    this.refresh()\n  }\n\n\n  render() {\n    return (\n      <div className=\"EditOptionsDialog\">\n        <button onClick={() => this.handleClickOpen()}>描述边(Edges)</button>\n        <Dialog\n          open={this.state.open}\n          onClose={() => {this.handleClose()}}\n          PaperComponent={DraggablePaper}\n          aria-labelledby=\"draggable-dialog-title\"\n        >\n          <DialogTitle\n            id=\"draggable-dialog-title\"\n            style={{ cursor: 'move' }}\n          >\n            描述边(Edges)\n          </DialogTitle>\n          <DialogContent>\n            <DialogContentText>\n              通过简单的标记语言对边进行描述, 语法见<a href=\"/#contribute\">如何贡献页面 1.1.1 小节</a>。\n            </DialogContentText>\n\n            <FormControlLabel\n              control={\n                <CustomSwitch\n                  checked={this.state.showId}\n                  onChange={(e) => {this.showIdChange(e)}}\n                  name=\"showIdCheck\"\n                />\n              }\n              label=\"显示节点ID\"\n              labelPlacement=\"start\"\n            />\n\n            <p id=\"edit-edgemark-tips\"> </p>\n            <AceEditor\n              value={this.state.content}\n              mode=\"text\"\n              theme=\"github\"\n              onChange={this.textChanged.bind(this)}\n              width=\"550px\"\n              height=\"400px\"\n              fontSize={20}\n              markers={this.state.markers}\n              ref='aceEditor'\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={() => {this.handleClose()}} color=\"primary\">\n              取消\n            </Button>\n            <Button onClick={() => {this.handleClickRefersh()}} color=\"primary\">\n              刷新\n            </Button>\n            <Button onClick={() => {this.handleClickConfirm()}} color=\"primary\">\n              确定\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </div>\n    );\n  }\n}\n","import React from 'react'\r\n\r\nimport { exportToJson } from './utils'\r\nimport ImportDialog from './ImportDialog'\r\nimport EdgeMarkDialog from './EdgeMarkDialog'\r\nimport { ItemInfo, NodeType } from './datatypes'\r\n\r\ntype setInfoMth = (info: ItemInfo) => void\r\n\r\nconst buildFileSelector = (setInfo: setInfoMth) => {\r\n  const fileSelector = document.createElement('input');\r\n  fileSelector.setAttribute('type', 'file');\r\n  fileSelector.setAttribute('multiple', 'multiple');\r\n  fileSelector.setAttribute('accept', '.json')\r\n  fileSelector.addEventListener('change', (event) => {\r\n    const target = event.target as HTMLInputElement\r\n    let file: File = (target.files as FileList)[0]\r\n    let reader = new FileReader()\r\n    reader.onload = () => {\r\n      setInfo(JSON.parse(reader.result as string))\r\n    }\r\n    if (file !== undefined) {\r\n      reader.readAsText(file)\r\n    }\r\n  })\r\n  return fileSelector;\r\n}\r\n\r\ntype UploadBtnProps = {\r\n  setInfo: setInfoMth\r\n}\r\n\r\ntype UploadBtnState = {\r\n  fileSelector: HTMLInputElement,\r\n}\r\n\r\nclass UploadBtn extends React.Component<UploadBtnProps, UploadBtnState> {\r\n  componentDidMount(){\r\n    this.setState({\r\n      fileSelector: buildFileSelector(this.props.setInfo)\r\n    })\r\n  }\r\n  \r\n  handleFileSelect = (e: React.MouseEvent) => {\r\n    e.preventDefault();\r\n    this.state.fileSelector.click();\r\n  }\r\n  \r\n  render(){\r\n    return <button onClick={this.handleFileSelect}>打开文件</button>\r\n  }\r\n}\r\n\r\ntype ToolBarProps = {\r\n  info: ItemInfo,\r\n  setInfo: setInfoMth,\r\n  queryNodes: (q: string, reverse: boolean) => Array<NodeType>\r\n}\r\n\r\n\r\nexport default class ToolBar extends React.Component<ToolBarProps, object> {\r\n  render() {\r\n    return (\r\n      <div className=\"toolbar\">\r\n        <div className=\"rightside\">\r\n          <ImportDialog info={this.props.info} setInfo={this.props.setInfo}/>\r\n          <EdgeMarkDialog info={this.props.info} setInfo={this.props.setInfo} queryNodes={this.props.queryNodes} />\r\n          <UploadBtn setInfo={this.props.setInfo}/>\r\n          <button onClick={() => {exportToJson(this.props.info, \"export.json\")}}>保存文件</button>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, {useState} from 'react'\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FilterListIcon from '@material-ui/icons/FilterList';\r\nimport AutorenewIcon from '@material-ui/icons/Autorenew';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport TuneIcon from '@material-ui/icons/Tune';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\n\r\nimport DraggablePaper from './DraggablePaper'\r\nimport { CustomSwitch } from './Customs'\r\n\r\n\r\ntype EditOptionsDialogProps = {\r\n  setOpt: (opt: any) => void,\r\n  getOpt: () => any,\r\n}\r\ntype EditOptionsDialogState = {\r\n  open: boolean,\r\n  content: string,\r\n}\r\n\r\nclass EditOptionsDialog extends React.Component<EditOptionsDialogProps, EditOptionsDialogState> {\r\n  constructor(props: EditOptionsDialogProps) {\r\n    super(props)\r\n    this.state = {\r\n      open: false,\r\n      content: \"\"\r\n    }\r\n  }\r\n\r\n  handleClickOpen() {\r\n    this.setState({open: true})\r\n    this.setTextArea()\r\n  };\r\n\r\n  handleClose() {\r\n    this.setState({open: false})\r\n  };\r\n\r\n  setTextArea() {\r\n    let opt = this.props.getOpt()\r\n    let content = JSON.stringify(opt, null, 2)\r\n    this.setState({content: content})\r\n  }\r\n\r\n  textChanged(event: any) {\r\n    this.setState({\r\n      content: event.target.value\r\n    })\r\n  }\r\n\r\n  handleClickConfirm() {\r\n    let options;\r\n    try {\r\n      options = JSON.parse(this.state.content)\r\n      this.props.setOpt(options)\r\n      this.setState({open: false})\r\n    } catch(err) {\r\n      console.log(err)\r\n      let ta = document.getElementById(\"edit-options-content\")\r\n      if (ta !== null) {\r\n        ta.style.border = \"2px solid #ff3333\"\r\n      }\r\n      let tip = document.getElementById(\"edit-options-tips\")\r\n      if (tip !== null) {\r\n        tip.innerHTML = \"JSON 解析失败，请检查。\"\r\n        tip.style.color = \"#ff3333\"\r\n        tip.style.fontSize = \"10px\"\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"EditOptionsDialog\">\r\n        <Tooltip title=\"编辑视图配置\" placement=\"top\">\r\n          <EditIcon onClick={() => {this.handleClickOpen()}}/>\r\n        </Tooltip>\r\n        <Dialog\r\n          open={this.state.open}\r\n          onClose={() => {this.handleClose()}}\r\n          PaperComponent={DraggablePaper}\r\n          aria-labelledby=\"draggable-dialog-title\"\r\n        >\r\n          <DialogTitle\r\n            id=\"draggable-dialog-title\"\r\n            style={{ cursor: 'move' }}\r\n          >\r\n              编辑网络视图配置\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText>\r\n              直接通过 JSON 对网络视图进行配置，可配置项目细节可以参考\r\n              <a href=\"https://visjs.github.io/vis-network/docs/network/\">vis-network 文档</a> 。\r\n            </DialogContentText>\r\n            <p id=\"edit-options-tips\"> </p>\r\n            <textarea id=\"edit-options-content\"\r\n              rows={18} cols={72}\r\n              value={this.state.content}\r\n              onChange={(e) => {this.textChanged(e)}}\r\n              />\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={() => {this.handleClose()}} color=\"primary\">\r\n              取消\r\n            </Button>\r\n            <Button onClick={() => {this.handleClickConfirm()}} color=\"primary\">\r\n              确定\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\ntype SearchDialogProps = {\r\n  queryAndFocus: (q: string) => void,\r\n}\r\ntype SearchDialogState = {\r\n  open: boolean,\r\n  queryText: string,\r\n}\r\n\r\nclass SearchDialog extends React.Component<SearchDialogProps, SearchDialogState> {\r\n  constructor(props: SearchDialogProps) {\r\n    super(props)\r\n    this.state = {\r\n      open: false,\r\n      queryText: \"\",\r\n    }\r\n  }\r\n\r\n  handleClickOpen() {\r\n    this.setState({open: true})\r\n  };\r\n\r\n  handleClose() {\r\n    this.setState({open: false})\r\n  };\r\n\r\n  handleClickSearch() {\r\n    const q = this.state.queryText\r\n    this.props.queryAndFocus(q)\r\n    this.setState({open: false, queryText: \"\"})\r\n  }\r\n\r\n  textChanged(event: any) {\r\n    this.setState({\r\n      queryText: event.target.value\r\n    })\r\n  }\r\n\r\n  handlePressEnter(event: any) {\r\n    if (event.key === \"Enter\") {\r\n      this.handleClickSearch()\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Tooltip title=\"搜索\" placement=\"top\">\r\n          <SearchIcon onClick={() => this.handleClickOpen()}/>\r\n        </Tooltip>\r\n        <Dialog open={this.state.open} onClose={() => {this.handleClose()}} aria-labelledby=\"form-dialog-title\">\r\n          <DialogContent id=\"searchDialog\">\r\n            <InputBase\r\n              value={this.state.queryText}\r\n              onChange={(e) => this.textChanged(e)}\r\n              onKeyPress={(e) => this.handlePressEnter(e)}\r\n              placeholder=\"输入节点标签（如，label:苍崎青子）或ID（如，id:1）\"\r\n            />\r\n            <IconButton type=\"submit\" onClick={() => this.handleClickSearch()} >\r\n              <SearchIcon/>\r\n            </IconButton>\r\n          </DialogContent>\r\n        </Dialog>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\n\r\ntype FilterDialogProps = {\r\n  queryAndFilter: (q: string, reverse: boolean) => void,\r\n  reset: () => void,\r\n}\r\ntype FilterDialogState = {\r\n  open: boolean,\r\n  queryText: string,\r\n  reverse: boolean,\r\n}\r\n\r\nclass FilterDialog extends React.Component<FilterDialogProps, FilterDialogState> {\r\n  constructor(props: FilterDialogProps) {\r\n    super(props)\r\n    this.state = {\r\n      open: false,\r\n      queryText: \"\",\r\n      reverse: true,\r\n    }\r\n  }\r\n\r\n  handleClickOpen() {\r\n    this.setState({open: true})\r\n  };\r\n\r\n  handleClose() {\r\n    this.setState({open: false})\r\n  };\r\n\r\n  handleClickFilter() {\r\n    const q = this.state.queryText\r\n    this.props.queryAndFilter(q, this.state.reverse)\r\n    this.setState({open: false, queryText: \"\"})\r\n  }\r\n\r\n  handleClickReset() {\r\n      this.props.reset()\r\n      this.setState({open: false, queryText: \"\"})\r\n  }\r\n\r\n  textChanged(event: any) {\r\n    this.setState({\r\n      queryText: event.target.value\r\n    })\r\n  }\r\n\r\n  handlePressEnter(event: any) {\r\n    if (event.key === \"Enter\") {\r\n      this.handleClickFilter()\r\n    }\r\n  }\r\n\r\n  handleChangeReverse(event: any) {\r\n    this.setState({\r\n      reverse: event.target.checked\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Tooltip title=\"筛选\" placement=\"top\">\r\n          <FilterListIcon onClick={() => this.handleClickOpen()}/>\r\n        </Tooltip>\r\n        <Dialog open={this.state.open} onClose={() => {this.handleClose()}} aria-labelledby=\"form-dialog-title\">\r\n          <DialogContent id=\"filterDialog\">\r\n            <InputBase\r\n              value={this.state.queryText}\r\n              onChange={(e) => this.textChanged(e)}\r\n              onKeyPress={(e) => this.handlePressEnter(e)}\r\n              placeholder=\"用于筛选的属性和正则表达式（如：categorie:person）\"\r\n            />\r\n            <IconButton type=\"submit\" onClick={() => this.handleClickFilter()} >\r\n              <Tooltip title=\"筛选\" placement=\"top\">\r\n                <FilterListIcon/>\r\n              </Tooltip>\r\n            </IconButton>\r\n            <IconButton type=\"submit\" onClick={() => this.handleClickReset()} >\r\n              <Tooltip title=\"重置\" placement=\"top\">\r\n                <AutorenewIcon/>\r\n              </Tooltip>\r\n            </IconButton>\r\n            <Tooltip title=\"反选\" placement=\"top\">\r\n              <Checkbox checked={this.state.reverse} onChange={(e) => this.handleChangeReverse(e)}/>\r\n            </Tooltip>\r\n          </DialogContent>\r\n        </Dialog>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nconst defaultOpt = (oldOpt: any) => {\r\n  const opt = Object.assign({}, oldOpt)\r\n  if (!(\"physics\" in opt)) { opt.physics = {} }\r\n  opt.physics.solver = \"forceAtlas2Based\"\r\n  let atlas;\r\n  if (!(\"forceAtlas2Based\" in opt.physics)) {\r\n    atlas = {}\r\n    opt.physics.forceAtlas2Based = atlas\r\n  } else {\r\n    atlas = opt.physics.forceAtlas2Based\r\n  }\r\n  const defaults = {\r\n    gravitationalConstant: -20,\r\n    centralGravity: 0.002,\r\n    springLength: 100,\r\n    springConstant: 0.01,\r\n  }\r\n  for (const [k, v] of Object.entries(defaults)) {\r\n    if (!(k in atlas)) {\r\n      atlas[k] = v\r\n    }\r\n  }\r\n  if (!(\"edges\" in opt)) { opt.edges = {} }\r\n  if (!(\"font\" in opt.edges)) { opt.edges.font = {} }\r\n  if (!(\"size\" in opt.edges.font)) { opt.edges.font.size = 14 }\r\n  return opt\r\n}\r\n\r\n\r\ntype sliderProps = {\r\n  setOpt: (opt: any) => void,\r\n  getOpt: () => any,\r\n}\r\n\r\nconst GravitationalConstantSlider = (props: sliderProps) => {\r\n  const opt = defaultOpt(props.getOpt())\r\n  let atlas = opt.physics.forceAtlas2Based\r\n  const [value, setValue] = useState(atlas.gravitationalConstant)\r\n\r\n  const handleChange = (event: any, newValue: number | number[]) => {\r\n    atlas.gravitationalConstant = newValue\r\n    setValue(newValue)\r\n    props.setOpt(opt)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Typography gutterBottom>\r\n        引力常数\r\n      </Typography>\r\n      <Slider\r\n        value={value}\r\n        onChange={handleChange}\r\n        min={-100}\r\n        max={0}\r\n        valueLabelDisplay=\"auto\"\r\n        aria-labelledby=\"continuous-slider\"\r\n      />\r\n    </>\r\n  )\r\n}\r\n\r\nconst SpringConstantSlider = (props: sliderProps) => {\r\n  const opt = defaultOpt(props.getOpt())\r\n  let atlas = opt.physics.forceAtlas2Based\r\n  const [value, setValue] = useState(Math.log10(atlas.springConstant))\r\n\r\n  const handleChange = (event: any, newValue: number | number[]) => {\r\n    const newVal = 10**(newValue as number)\r\n    atlas.springConstant = newVal\r\n    setValue(newValue as number)\r\n    props.setOpt(opt)\r\n  }\r\n\r\n  const labelFormat = (value: number) => {\r\n    return \"1e^\" + value\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Typography gutterBottom>\r\n        弹簧常数\r\n      </Typography>\r\n      <Slider\r\n        value={value}\r\n        onChange={handleChange}\r\n        step={0.5}\r\n        min={-5}\r\n        max={0}\r\n        valueLabelDisplay=\"auto\"\r\n        valueLabelFormat={labelFormat}\r\n        aria-labelledby=\"non-linear-slider\"\r\n      />\r\n    </>\r\n  )\r\n}\r\n\r\nconst PhysicsSwitch = (props: sliderProps) => {\r\n  const opt = defaultOpt(props.getOpt())\r\n  const [value, setValue] = useState(opt.physics.enabled)\r\n\r\n  const handleChange = (event: any) => {\r\n    const checked = event.target.checked\r\n    opt.physics.enabled = checked\r\n    setValue(checked)\r\n    props.setOpt(opt)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Typography gutterBottom>\r\n        物理效果\r\n      </Typography>\r\n      <CustomSwitch checked={value} onChange={handleChange} name=\"physicsCheck\" />\r\n    </>\r\n  )\r\n\r\n}\r\n\r\n\r\nconst HiddenEdgeLabelSwitch = (props: sliderProps) => {\r\n  const opt = defaultOpt(props.getOpt())\r\n  const [value, setValue] = useState(opt.edges.font.size === 0)\r\n\r\n  const handleChange = (event: any) => {\r\n    const checked = event.target.checked\r\n    if (checked) {\r\n      opt.edges.font.size = 0\r\n    } else {\r\n      opt.edges.font.size = 14\r\n    }\r\n    setValue(checked)\r\n    props.setOpt(opt)\r\n    console.log(opt)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Typography gutterBottom>\r\n        隐藏边标签\r\n      </Typography>\r\n      <CustomSwitch checked={value} onChange={handleChange} name=\"hiddenEdgeLabelCheck\" />\r\n    </>\r\n  )\r\n\r\n}\r\n\r\n\r\ntype TuneDialogProps = {\r\n  setOpt: (opt: any) => void,\r\n  getOpt: () => any,\r\n}\r\ntype TuneDialogState = {\r\n  open: boolean\r\n}\r\n\r\nclass TuneDialog extends React.Component<TuneDialogProps, TuneDialogState> {\r\n  constructor(props: TuneDialogProps) {\r\n    super(props)\r\n    this.state = {\r\n      open: false,\r\n    }\r\n  }\r\n\r\n  handleClickOpen() {\r\n    this.setState({open: true})\r\n  };\r\n\r\n  handleClose() {\r\n    this.setState({open: false})\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Tooltip title=\"视图调整\" placement=\"top\">\r\n          <TuneIcon onClick={() => this.handleClickOpen()}/>\r\n        </Tooltip>\r\n        <Dialog\r\n          open={this.state.open}\r\n          onClose={() => {this.handleClose()}}\r\n          PaperComponent={DraggablePaper}\r\n          aria-labelledby=\"draggable-dialog-title\"\r\n        >\r\n          <DialogTitle\r\n            id=\"draggable-dialog-title\"\r\n            style={{ cursor: 'move' }}\r\n          >\r\n            网络视图调整</DialogTitle>\r\n          <DialogContent id=\"tuneDialog\">\r\n            <PhysicsSwitch\r\n              setOpt={this.props.setOpt}\r\n              getOpt={this.props.getOpt}/>\r\n            <GravitationalConstantSlider\r\n              setOpt={this.props.setOpt}\r\n              getOpt={this.props.getOpt}/>\r\n            <SpringConstantSlider\r\n              setOpt={this.props.setOpt}\r\n              getOpt={this.props.getOpt}/>\r\n            <HiddenEdgeLabelSwitch\r\n              setOpt={this.props.setOpt}\r\n              getOpt={this.props.getOpt}/>\r\n          </DialogContent>\r\n        </Dialog>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nconst InforBoardSwitch = (props: {switchState: boolean, setSwitch: (on: boolean) => void}) => {\r\n  const handleChange = (event: any) => {\r\n    const checked = event.target.checked\r\n    props.setSwitch(checked)\r\n  }\r\n\r\n  return (\r\n    <FormControlLabel\r\n      control={<CustomSwitch checked={props.switchState} onChange={handleChange} name=\"inforBoardCheck\" />}\r\n      label=\"弹出信息\"\r\n      labelPlacement=\"start\"\r\n    />\r\n    \r\n  )\r\n}\r\n\r\n\r\nconst HiddenUnselectedSwitch = (props: {switchState: boolean, setSwitch: (on: boolean) => void}) => {\r\n  const handleChange = (event: any) => {\r\n    const checked = event.target.checked\r\n    props.setSwitch(checked)\r\n  }\r\n\r\n  return (\r\n    <FormControlLabel\r\n      control={<CustomSwitch checked={props.switchState} onChange={handleChange} name=\"hiddenUnselectedCheck\" />}\r\n      label=\"隐藏未选中节点\"\r\n      labelPlacement=\"start\"\r\n    />\r\n    \r\n  )\r\n}\r\n\r\n\r\ntype SettingDialogProps = {\r\n  inforBoardSwitch: boolean,\r\n  setInforBoardSwitch: (on: boolean) => void,\r\n  hiddenUnselectedSwitch: boolean,\r\n  setHiddenUnselectedSwitch: (on: boolean) => void,\r\n}\r\ntype SettingDialogState = {\r\n  open: boolean\r\n}\r\n\r\nclass SettingDialog extends React.Component<SettingDialogProps, SettingDialogState> {\r\n  constructor(props: SettingDialogProps) {\r\n    super(props)\r\n    this.state = {\r\n      open: false\r\n    }\r\n  }\r\n\r\n  handleClickOpen() {\r\n    this.setState({open: true})\r\n  };\r\n\r\n  handleClose() {\r\n    this.setState({open: false})\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Tooltip title=\"设置\" placement=\"top\">\r\n          <SettingsIcon onClick={() => this.handleClickOpen()}/>\r\n        </Tooltip>\r\n        <Dialog\r\n          open={this.state.open}\r\n          onClose={() => {this.handleClose()}}\r\n          PaperComponent={DraggablePaper}\r\n          aria-labelledby=\"draggable-dialog-title\"\r\n        >\r\n          <DialogTitle\r\n            id=\"draggable-dialog-title\"\r\n            style={{ cursor: 'move' }}\r\n          >\r\n            设置\r\n          </DialogTitle>\r\n          <DialogContent id=\"tuneDialog\">\r\n            <InforBoardSwitch\r\n              switchState={this.props.inforBoardSwitch}\r\n              setSwitch={this.props.setInforBoardSwitch}\r\n            />\r\n            <HiddenUnselectedSwitch\r\n              switchState={this.props.hiddenUnselectedSwitch}\r\n              setSwitch={this.props.setHiddenUnselectedSwitch}\r\n            />\r\n          </DialogContent>\r\n        </Dialog>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport {\r\n  EditOptionsDialog, SearchDialog,\r\n  FilterDialog, TuneDialog, SettingDialog,\r\n}\r\n","import React from 'react'\r\nimport Draggable from 'react-draggable';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nimport { shorterString } from './utils'\r\nimport { NodeType, CatType, Pos2d } from './datatypes'\r\n\r\n\r\ntype infoBoardProps = {\r\n  pos: Pos2d,\r\n  node: NodeType,\r\n  cats: Record<string, CatType>,\r\n  close: () => void,\r\n}\r\n\r\nexport default (props: infoBoardProps) => {\r\n  const node = props.node\r\n  const pos = props.pos\r\n  let cat = props.cats[node.categorie]\r\n  const boardStyle = {\r\n    top: pos.y + \"px\",\r\n    left: pos.x + \"px\",\r\n  }\r\n  const catStyle = 'color' in cat ? {color: cat.color} : {}\r\n  return (\r\n    <Draggable>\r\n      <div className=\"infoBoard\" style={boardStyle}>\r\n        <CloseIcon className=\"closeButton\" onClick={() => props.close()} />\r\n        <div className=\"content\">\r\n          <img src={('image' in node) ? node.image : ''} alt=\"\"/>\r\n          <div className=\"title\">\r\n            <div className=\"name\">\r\n              {node.label}\r\n            </div>\r\n            <div className=\"categorie\" style={catStyle}>\r\n              {(cat !== undefined) ? cat.label : \"\"}\r\n            </div>\r\n          </div>\r\n          <div className=\"describe\">\r\n            { shorterString(node.info, 80) }\r\n          </div>\r\n          {\r\n            ('link' in node) && (node['link'] !== \"\") ?\r\n            <a className=\"link\" href={node.link}>链接</a> :\r\n            null\r\n          }\r\n        </div>\r\n      </div>\r\n    </Draggable>\r\n  )\r\n}\r\n","/** Come from:\r\n *     https://material-ui.com/zh/components/progress/#circular-with-label\r\n */\r\n\r\nimport React from 'react';\r\nimport CircularProgress, { CircularProgressProps } from '@material-ui/core/CircularProgress';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nexport default (props: CircularProgressProps & { value: number }) => {\r\n  if (props.value >= 100) {\r\n    return (<></>)\r\n  }\r\n  return (\r\n    <Box position=\"relative\" display=\"inline-flex\">\r\n      <CircularProgress {...props} />\r\n      <Box\r\n        top={0}\r\n        left={0}\r\n        bottom={0}\r\n        right={0}\r\n        position=\"absolute\"\r\n        display=\"flex\"\r\n        alignItems=\"center\"\r\n        justifyContent=\"center\"\r\n      >\r\n        <Typography variant=\"caption\" component=\"div\" color=\"textSecondary\">\r\n          {`${Math.round( props.value,)}%`}\r\n        </Typography>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n","import React, { useState } from 'react'\r\nimport FullscreenIcon from '@material-ui/icons/Fullscreen'\r\nimport FullscreenExitIcon from '@material-ui/icons/FullscreenExit';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport PhotoCameraIcon from '@material-ui/icons/PhotoCamera';\r\nimport { Network as NetworkType, IdType } from 'vis/index'\r\n\r\n\r\nimport { EditOptionsDialog, SearchDialog, FilterDialog, TuneDialog, SettingDialog } from './ViewDialogs'\r\nimport { Network, Node, Edge } from 'react-vis-network'\r\nimport { ItemInfo, NodeType, EdgeType, CatType, Pos2d } from './datatypes'\r\nimport InfoBoard from './InfoBoard'\r\nimport CircularProgress from './CircularProgressWithLabel'\r\n\r\n\r\nconst getCanvas = () => document.getElementsByTagName(\"canvas\")[0]\r\n\r\n\r\nconst DefaultNetStyle = {\r\n  NodeColor: \"#66bbff\",\r\n  NodeBorderWidth: 3,\r\n}\r\n\r\n\r\nconst createNode = (n: NodeType, catgories: Record<string, CatType>) => {\r\n  let cat = catgories[n.categorie]\r\n  let color;\r\n  if (cat) {\r\n    color = cat.color\r\n  } else {\r\n    color = DefaultNetStyle.NodeColor\r\n  }\r\n  return (\r\n    <Node key={n.id}\r\n      id={n.id} label={n.label}\r\n      shape=\"circularImage\"\r\n      image={n.image}\r\n      color={color}\r\n      borderWidth={DefaultNetStyle.NodeBorderWidth}\r\n    />\r\n  )\r\n}\r\n\r\nconst createEdge = (e: EdgeType) => {\r\n  let arrows = \"\"\r\n  if (('direction' in e) && (e['direction'] === true)) { arrows = \"to\" }\r\n  return (\r\n    <Edge key={e.id} id={e.id} arrows={arrows}\r\n          from={e.from} to={e.to} label={e.label}\r\n    />\r\n  )\r\n}\r\n\r\n\r\ntype ViewControlProps = {\r\n  setOpt: (opt: any) => void,\r\n  getOpt: () => any,\r\n  captureImg: () => void,\r\n  queryAndFocus: (q: string) => void,\r\n  queryAndFilter: (q: string, reverse: boolean) => void,\r\n  reset: () => void,\r\n  inforBoardSwitch: boolean,\r\n  setInforBoardSwitch: (on: boolean) => void,\r\n  hiddenUnselectedSwitch: boolean,\r\n  setHiddenUnselectedSwitch: (on: boolean) => void,\r\n}\r\n\r\nconst ViewControl = (props: ViewControlProps) => {\r\n  const [fullScreenMode, setFullScreenMode] = useState(false)\r\n  let oriHeight = 300\r\n\r\n  const enterFullScreen = () => {\r\n    let canvas = getCanvas()\r\n    let fullRegion = document.getElementById(\"full-screen-region\")\r\n    fullRegion?.requestFullscreen()\r\n    oriHeight = canvas.clientHeight\r\n    canvas.style.height = window.screen.height + \"px\";\r\n    setFullScreenMode(true)\r\n    document.addEventListener('fullscreenchange', (event) => {\r\n      if (!(document.fullscreenElement)) {\r\n        turnBackSize()\r\n        setFullScreenMode(false)\r\n      }\r\n    });\r\n  }\r\n\r\n  const turnBackSize = () => {\r\n    let canvas = getCanvas()\r\n    canvas.style.height = oriHeight + \"px\"\r\n  }\r\n\r\n  const exitFullScreen = () => {\r\n    document.exitFullscreen()\r\n    turnBackSize()\r\n    setFullScreenMode(false)\r\n  }\r\n\r\n  return (\r\n    <div className=\"viewControl\">\r\n      <SearchDialog queryAndFocus={props.queryAndFocus}/>\r\n      <FilterDialog queryAndFilter={props.queryAndFilter} reset={props.reset}/>\r\n      <Tooltip title=\"截图\" placement=\"top\"><PhotoCameraIcon onClick={() => props.captureImg()}/></Tooltip>\r\n      <TuneDialog setOpt={props.setOpt} getOpt={props.getOpt}/>\r\n      <EditOptionsDialog setOpt={props.setOpt} getOpt={props.getOpt}/>\r\n      <SettingDialog\r\n        inforBoardSwitch={props.inforBoardSwitch}\r\n        setInforBoardSwitch={props.setInforBoardSwitch}\r\n        hiddenUnselectedSwitch={props.hiddenUnselectedSwitch}\r\n        setHiddenUnselectedSwitch={props.setHiddenUnselectedSwitch}\r\n      />\r\n      {fullScreenMode\r\n      ? <Tooltip title=\"退出全屏\" placement=\"top\"><FullscreenExitIcon onClick={exitFullScreen}/></Tooltip>\r\n      : <Tooltip title=\"全屏\" placement=\"top\"><FullscreenIcon onClick={enterFullScreen}/></Tooltip>\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nconst DEFAULT_NETWORK_OPTIONS = {\r\n  autoResize: false,\r\n  nodes: {\r\n    shape: \"dot\",\r\n  },\r\n  physics: {\r\n    enabled: true,\r\n    stabilization: false,\r\n    solver: 'forceAtlas2Based',\r\n    forceAtlas2Based: {\r\n      gravitationalConstant: -20,\r\n      centralGravity: 0.002,\r\n      springLength: 100,\r\n      springConstant: 0.01\r\n    },\r\n  },\r\n  edges: {\r\n    width: 0.3,\r\n    color: {\r\n      inherit: \"to\"\r\n    }\r\n  },\r\n  interaction: {\r\n    hideEdgesOnDrag: false,\r\n    hover: true,\r\n    multiselect: true,\r\n  }\r\n}\r\n\r\ntype NetViewProps = {\r\n  info: ItemInfo,\r\n  setNodes: (nodes: Array<NodeType>) => void,\r\n  queryNodes: (q: string, reverse: boolean) => Array<NodeType>,\r\n}\r\n\r\ntype NetworkRef = {\r\n  network: NetworkType\r\n}\r\n\r\ntype NetViewState = {\r\n  infoBoard: JSX.Element | null,\r\n  loadingRatio: number,\r\n  inforBoardSwitch: boolean,\r\n  netRef: React.RefObject<NetworkRef>,\r\n  netOptions: any,\r\n  oldNodes: Array<NodeType>,\r\n  hiddenUnselectedSwitch: boolean,\r\n}\r\n\r\nexport default class NetView extends React.Component<NetViewProps, NetViewState> {\r\n  constructor(props: NetViewProps) {\r\n    super(props)\r\n    this.state = {\r\n      infoBoard: null,\r\n      loadingRatio: 0,\r\n      inforBoardSwitch: true,\r\n      netRef: React.createRef(),\r\n      netOptions: null,\r\n      oldNodes: props.info.data.nodes,\r\n      hiddenUnselectedSwitch: false\r\n    }\r\n  }\r\n\r\n  setHiddenUnselectedSwitch(on: boolean) {\r\n    const oldState = this.state.hiddenUnselectedSwitch\r\n    if ((oldState === true) && (on === false)) {\r\n      this.resetNodes()\r\n    } else if((oldState === false) && (on === true)) {\r\n      this.hiddenNonSelected()\r\n    }\r\n    this.setState({\r\n      hiddenUnselectedSwitch: on\r\n    })\r\n  }\r\n\r\n  handlePopup (params: any) {\r\n    const network = (this.state.netRef.current as NetworkRef).network\r\n    const node_id = network.getNodeAt(params.pointer.DOM)\r\n    const select_node = (typeof node_id !== \"undefined\")\r\n    const pos: Pos2d = {x: 20, y: 20}\r\n\r\n    const create_board = () => {\r\n      let node = this.props.info.data.nodes.find((n) => (n.id === node_id))\r\n      return <InfoBoard pos={pos} node={node as NodeType}\r\n                        cats={this.props.info.categories}\r\n                        close={() => (this.setState({infoBoard: null}))}/>\r\n    }\r\n\r\n    let board = this.state.infoBoard\r\n    if (select_node && (board === null) && this.state.inforBoardSwitch) {\r\n      this.setState({infoBoard: create_board()})\r\n    } else if (select_node && (board !== null) && this.state.inforBoardSwitch) {\r\n      this.setState({infoBoard: create_board()})\r\n    } else if (board !== null ) {\r\n      this.setState({infoBoard: null})\r\n    }\r\n  }\r\n\r\n  handleHidden(params: any) {\r\n    if (!(this.state.hiddenUnselectedSwitch)) {return}\r\n    const select_node = (params.nodes.length > 0)\r\n    if (select_node) {\r\n      this.hiddenNonSelected()\r\n    } else {\r\n      this.resetNodes()\r\n    }\r\n  }\r\n\r\n  handleClick(params: any) {\r\n    this.handlePopup(params)\r\n    this.handleHidden(params)\r\n  }\r\n\r\n  setInforBoardSwitch(on: boolean) {\r\n    this.setState({\r\n      inforBoardSwitch: on\r\n    })\r\n  }\r\n\r\n  setNetOptions(options: any) {\r\n    let network = (this.state.netRef.current as NetworkRef).network\r\n    network.setOptions(options)\r\n    this.setState({netOptions: options})\r\n  }\r\n\r\n  getNetOptions() {\r\n    return this.state.netOptions\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setNetOptions(DEFAULT_NETWORK_OPTIONS)\r\n    this.registerLoading()\r\n  }\r\n\r\n  createNetwork() {\r\n    let info = this.props.info\r\n    const network = (\r\n      <>\r\n      {this.createLoadindBar()}\r\n      <Network ref={this.state.netRef} onClick={(params: any) => {this.handleClick(params)}} >\r\n        {info.data.nodes.map(n => createNode(n, info.categories))}\r\n        {info.data.edges.map((e) => createEdge(e))}\r\n      </Network>\r\n      </>\r\n    )\r\n    return network\r\n  }\r\n\r\n  createLoadindBar() {\r\n    return (\r\n      <div id=\"progressBar\">\r\n        <CircularProgress variant=\"determinate\" value={this.state.loadingRatio * 100}/>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  registerLoading() {\r\n    // https://jsfiddle.net/api/post/library/pure/\r\n    const self = this\r\n    const ref = (this.state.netRef.current as NetworkRef).network\r\n    ref.on(\"stabilizationProgress\", function (params: any) {\r\n      const ratio = params.iterations / params.total;\r\n      self.setState({loadingRatio: ratio})\r\n    })\r\n    ref.once(\"stabilizationIterationsDone\", function () {\r\n      self.setState({loadingRatio: 1})\r\n    })\r\n  }\r\n\r\n  captureImg() {\r\n    const canvas = getCanvas()\r\n    // Fill the canvas background, see: \r\n    //   https://stackoverflow.com/questions/50104437/set-background-color-to-save-canvas-chart\r\n    const context = canvas.getContext('2d')\r\n    if (context !== null) {\r\n      context.save()\r\n      context.globalCompositeOperation = 'destination-over'\r\n      context.fillStyle = \"#ffffff\"\r\n      context.fillRect(0, 0, canvas.width, canvas.height)\r\n      context.restore()\r\n    }\r\n\r\n    const img = canvas.toDataURL(\"image/png\", 1.0)\r\n    const url = img.replace(/^data:image\\/[^;]/, 'data:application/octet-stream')\r\n    let a = document.createElement('a');\r\n    a.download = \"network.png\";\r\n    a.href = url\r\n    a.target = '_blank';\r\n    document.body.appendChild(a);\r\n    a.click();\r\n    document.body.removeChild(a);\r\n  }\r\n\r\n  queryNodesAndFocus(q:string) {\r\n    const nodes = this.props.queryNodes(q, false)\r\n    if (nodes.length <= 0) {return}\r\n    const network = (this.state.netRef.current as NetworkRef).network\r\n    network.selectNodes([])\r\n    const nodes_id = nodes.map(n => String(n.id))\r\n    if (nodes.length > 1) {\r\n      network.fit({nodes: nodes_id, animation: true})\r\n    } else {\r\n      network.focus(nodes_id[0], {scale: 1, animation: true})\r\n    }\r\n    network.selectNodes(nodes_id)\r\n  }\r\n\r\n  queryNodesAndFilter(q:string, reverse:boolean) {\r\n    const nodes = this.props.queryNodes(q, reverse)\r\n    this.props.setNodes(nodes)\r\n  }\r\n\r\n  resetNodes() {\r\n    this.props.setNodes(this.state.oldNodes)\r\n  }\r\n\r\n  getSelectedClosure() {\r\n    const network = (this.state.netRef.current as NetworkRef).network\r\n    const selected = network.getSelectedNodes()\r\n    let closure: Set<IdType> = new Set();\r\n    for (const nid of selected) {\r\n      closure.add( parseInt(String(nid)) )\r\n      const connected = network.getConnectedNodes(nid)\r\n      for (const nid2 of (connected as IdType[])) {\r\n        closure.add( parseInt(String(nid2)) )\r\n      }\r\n    }\r\n    return closure\r\n  }\r\n\r\n  hiddenNonSelected() {\r\n    this.resetNodes()\r\n    const closure = this.getSelectedClosure()\r\n    let nodes = []\r\n    for (const n of this.state.oldNodes) {\r\n      if (closure.has(n.id)) {\r\n        nodes.push(n)\r\n      }\r\n    }\r\n    this.props.setNodes(nodes)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"netView\">\r\n        <div className=\"canvas-wrap\" id=\"full-screen-region\">\r\n          {this.createNetwork()}\r\n          {this.state.infoBoard}\r\n          <ViewControl\r\n            setOpt={this.setNetOptions.bind(this)}\r\n            getOpt={this.getNetOptions.bind(this)}\r\n            captureImg={this.captureImg.bind(this)}\r\n            queryAndFocus={this.queryNodesAndFocus.bind(this)}\r\n            queryAndFilter={this.queryNodesAndFilter.bind(this)}\r\n            reset={this.resetNodes.bind(this)}\r\n            inforBoardSwitch={this.state.inforBoardSwitch}\r\n            setInforBoardSwitch={this.setInforBoardSwitch.bind(this)}\r\n            hiddenUnselectedSwitch={this.state.hiddenUnselectedSwitch}\r\n            setHiddenUnselectedSwitch={this.setHiddenUnselectedSwitch.bind(this)}\r\n          />\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","/**\r\n * Modified from this:\r\n *   https://material-ui.com/zh/components/slider/#custom-marks\r\n */\r\nimport React from 'react';\r\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\r\nimport Slider from '@material-ui/core/Slider';\r\n\r\nimport { TimePoint } from './datatypes';\r\n\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      width: 400,\r\n    },\r\n    margin: {\r\n      height: theme.spacing(3),\r\n    },\r\n  }),\r\n);\r\n\r\ntype TimeSliderProps = {\r\n    time: number,\r\n    timePoints: Array<TimePoint>,\r\n    setTime: (t: number) => void,\r\n}\r\n\r\nexport default (props: TimeSliderProps) => {\r\n  if (props.timePoints.length < 2) { return (<></>) }\r\n  const classes = useStyles();\r\n\r\n  let i = -1;\r\n  const marks = props.timePoints.map(t => {\r\n    i += 1\r\n    return {\r\n      value: i,\r\n      label: t.label\r\n    }\r\n  })\r\n\r\n  const handleChange = (event: any, newValue: number | number[]) => {\r\n    const t = newValue as number\r\n    props.setTime(t)\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root+\" timeSlider\"}>\r\n        <div className=\"label\">时间轴</div>\r\n        <div className=\"slider\">\r\n          <Slider\r\n            defaultValue={props.time}\r\n            aria-labelledby=\"discrete-slider-custom\"\r\n            min={0}\r\n            max={props.timePoints.length-1}\r\n            step={null}\r\n            valueLabelDisplay=\"off\"\r\n            marks={marks}\r\n            onChange={handleChange}\r\n          />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","// Implement the Table style editor of nodes, edges and categories\r\n//\r\n// This file is copy then modified from devexetreme-reactive demo:\r\n//   https://devexpress.github.io/devextreme-reactive/react/grid/demos/featured/data-editing/\r\n\r\nimport React from 'react';\r\nimport {\r\n  SortingState, EditingState, PagingState, SummaryState,\r\n  IntegratedPaging, IntegratedSorting,\r\n} from '@devexpress/dx-react-grid';\r\nimport {\r\n  Grid,\r\n  Table, TableHeaderRow, TableEditRow, TableEditColumn,\r\n  PagingPanel, TableColumnReordering,\r\n  TableFixedColumns, \r\n} from '@devexpress/dx-react-grid-material-ui';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Input from '@material-ui/core/Input';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport TableCell from '@material-ui/core/TableCell';\r\n\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\n\r\nconst styles = theme => ({\r\n  lookupEditCell: {\r\n    padding: theme.spacing(1),\r\n  },\r\n  dialog: {\r\n    width: 'calc(100% - 16px)',\r\n  },\r\n  inputRoot: {\r\n    width: '100%',\r\n  },\r\n  selectMenu: {\r\n    position: 'absolute !important',\r\n  },\r\n});\r\n\r\nconst AddButton = ({ onExecute }) => (\r\n  <div style={{ textAlign: 'center' }}>\r\n    <Button\r\n      color=\"primary\"\r\n      onClick={onExecute}\r\n      title=\"Create new row\"\r\n    >\r\n      New\r\n    </Button>\r\n  </div>\r\n);\r\n\r\nconst EditButton = ({ onExecute }) => (\r\n  <IconButton onClick={onExecute} title=\"Edit row\">\r\n    <EditIcon />\r\n  </IconButton>\r\n);\r\n\r\nconst DeleteButton = ({ onExecute }) => (\r\n  <IconButton\r\n    onClick={() => {\r\n      // eslint-disable-next-line\r\n      if (window.confirm('Are you sure you want to delete this row?')) {\r\n        onExecute();\r\n      }\r\n    }}\r\n    title=\"Delete row\"\r\n  >\r\n    <DeleteIcon />\r\n  </IconButton>\r\n);\r\n\r\nconst CommitButton = ({ onExecute }) => (\r\n  <IconButton onClick={onExecute} title=\"Save changes\">\r\n    <SaveIcon />\r\n  </IconButton>\r\n);\r\n\r\nconst CancelButton = ({ onExecute }) => (\r\n  <IconButton color=\"secondary\" onClick={onExecute} title=\"Cancel changes\">\r\n    <CancelIcon />\r\n  </IconButton>\r\n);\r\n\r\nconst commandComponents = {\r\n  add: AddButton,\r\n  edit: EditButton,\r\n  delete: DeleteButton,\r\n  commit: CommitButton,\r\n  cancel: CancelButton,\r\n};\r\n\r\nconst Command = ({ id, onExecute }) => {\r\n  const CommandButton = commandComponents[id];\r\n  return (\r\n    <CommandButton\r\n      onExecute={onExecute}\r\n    />\r\n  );\r\n};\r\n\r\nconst availableValues = {\r\n  categorie: [\"person\", \"organization\"],\r\n  direction: [\"true\", \"false\"]\r\n};\r\n\r\nconst LookupEditCellBase = ({\r\n  availableColumnValues, value, onValueChange, classes,\r\n}) => (\r\n  <TableCell\r\n    className={classes.lookupEditCell}\r\n  >\r\n    <Select\r\n      value={value}\r\n      onChange={event => onValueChange(event.target.value)}\r\n      MenuProps={{\r\n        className: classes.selectMenu,\r\n      }}\r\n      input={(\r\n        <Input\r\n          classes={{ root: classes.inputRoot }}\r\n        />\r\n      )}\r\n    >\r\n      {availableColumnValues.map(item => (\r\n        <MenuItem key={item} value={item}>\r\n          {item}\r\n        </MenuItem>\r\n      ))}\r\n    </Select>\r\n  </TableCell>\r\n);\r\nexport const LookupEditCell = withStyles(styles, { name: 'ControlledModeDemo' })(LookupEditCellBase);\r\n\r\nconst EditCell = (props) => {\r\n  const { column } = props;\r\n  const availableColumnValues = availableValues[column.name];\r\n  if (availableColumnValues) {\r\n    return <LookupEditCell {...props} availableColumnValues={availableColumnValues} />;\r\n  }\r\n  return <TableEditRow.Cell {...props} />;\r\n};\r\n\r\nconst getRowId = row => row.id;\r\n\r\n/**\r\n * Generate an Editable Grid object\r\n */\r\nconst createGrid = (colDef, getParentState, widthDef, colOrder, defaultDef, setParentState) => {\r\n\r\n  class TheGrid extends React.Component {\r\n    \r\n    constructor(props) {\r\n      super(props)\r\n      this.state = {\r\n        columns: colDef,\r\n        rows: (typeof getParentState === \"function\") ? getParentState(props) : props[getParentState],\r\n        tableColumnExtensions: widthDef,\r\n        sorting: [],\r\n        editingRowIds: [],\r\n        addedRows: [],\r\n        rowChanges: {},\r\n        currentPage: 0,\r\n        pageSize: 5,\r\n        pageSizes: [5, 10, 0],\r\n        columnOrder: colOrder,\r\n        leftFixedColumns: [TableEditColumn.COLUMN_TYPE],\r\n        totalSummaryItems: []\r\n      }\r\n    }\r\n\r\n    changeAddedRows(value) {\r\n      let defaultRow = {}\r\n      for (const [k, v] of Object.entries(defaultDef)) {\r\n        if (typeof v === \"function\") {\r\n          defaultRow[k] = v(this.state.rows)\r\n        } else {\r\n          defaultRow[k] = v\r\n        }\r\n      }\r\n      console.log(defaultRow)\r\n      this.setState({\r\n        addedRows: value.map(row => (Object.keys(row).length ? row : defaultRow))\r\n      })\r\n    }\r\n\r\n    deleteRows(deletedIds) {\r\n      const rowsForDelete = this.state.rows.slice();\r\n      deletedIds.forEach((rowId) => {\r\n        const index = rowsForDelete.findIndex(row => row.id === rowId);\r\n        if (index > -1) {\r\n          rowsForDelete.splice(index, 1);\r\n        }\r\n      });\r\n      return rowsForDelete;\r\n    }\r\n\r\n    commitChanges({ added, changed, deleted }) {\r\n      const rows = this.state.rows\r\n      let changedRows;\r\n      if (added) {\r\n        const startingAddedId = rows.length > 0 ? rows[rows.length - 1].id + 1 : 0;\r\n        changedRows = [\r\n          ...rows,\r\n          ...added.map((row, index) => ({\r\n            id: startingAddedId + index,\r\n            ...row,\r\n          })),\r\n        ];\r\n      }\r\n      if (changed) {\r\n        changedRows = rows.map(row => (changed[row.id] ? { ...row, ...changed[row.id] } : row));\r\n      }\r\n      if (deleted) {\r\n        changedRows = this.deleteRows(deleted);\r\n      }\r\n      this.setState({\r\n        rows: changedRows\r\n      })\r\n      // change the state of parent component\r\n      setParentState(this.props, changedRows)\r\n    };\r\n\r\n  /**\r\n   * re-render rows when receive new props, see:\r\n   *   https://stackoverflow.com/questions/41233458/react-child-component-not-updating-after-parent-state-change\r\n   */\r\n  componentWillReceiveProps(nextProps) {\r\n    const newRows = (typeof getParentState === \"function\") ? getParentState(nextProps) : nextProps[getParentState]\r\n    this.setState({ rows: newRows });  \r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Paper>\r\n        <Grid\r\n          rows={this.state.rows}\r\n          columns={this.state.columns}\r\n          getRowId={getRowId}\r\n        >\r\n          <SortingState\r\n            sorting={this.state.sorting}\r\n            onSortingChange={(s) => {this.setState({sorting: s})}}\r\n          />\r\n          <PagingState\r\n            currentPage={this.state.currentPage}\r\n            onCurrentPageChange={(c) => this.setState({currentPage: c})}\r\n            pageSize={this.state.pageSize}\r\n            onPageSizeChange={(s) => this.setState({pageSize: s})}\r\n          />\r\n          <EditingState\r\n            editingRowIds={this.state.editingRowIds}\r\n            onEditingRowIdsChange={(ids) => {this.setState({editingRowIds: ids})}}\r\n            rowChanges={this.state.rowChanges}\r\n            onRowChangesChange={(c) => {this.setState({rowChanges: c})}}\r\n            addedRows={this.state.addedRows}\r\n            onAddedRowsChange={this.changeAddedRows.bind(this)}\r\n            onCommitChanges={this.commitChanges.bind(this)}\r\n          />\r\n          <SummaryState\r\n            totalItems={this.state.totalSummaryItems}\r\n          />\r\n\r\n          <IntegratedSorting />\r\n          <IntegratedPaging />\r\n\r\n          <Table\r\n            columnExtensions={this.state.tableColumnExtensions}\r\n          />\r\n          <TableColumnReordering\r\n            order={this.state.columnOrder}\r\n            onOrderChange={(c) => this.setState({columnOrder: c})}\r\n          />\r\n          <TableHeaderRow showSortingControls />\r\n          <TableEditRow\r\n            cellComponent={EditCell}\r\n          />\r\n          <TableEditColumn\r\n            width={150}\r\n            showAddCommand={!this.state.addedRows.length}\r\n            showEditCommand\r\n            showDeleteCommand\r\n            commandComponent={Command}\r\n          />\r\n          <TableFixedColumns\r\n            leftColumns={this.state.leftFixedColumns}\r\n          />\r\n          <PagingPanel\r\n            pageSizes={this.state.pageSizes}\r\n          />\r\n        </Grid>\r\n      </Paper>\r\n    );\r\n  }\r\n\r\n  }\r\n\r\n  return TheGrid\r\n\r\n}\r\n\r\nconst NodeGrid = createGrid(\r\n  [\r\n    { name: 'id', title: 'ID' },\r\n    { name: 'label', title: '标签' },\r\n    { name: 'categorie', title: '类别' },\r\n    { name: 'info', title: '信息' },\r\n    { name: 'image', title: '图片' },\r\n    { name: 'link', title: '链接' },\r\n  ],\r\n  \"nodes\",\r\n  [\r\n    { columnName: 'id', width: 80 },\r\n    { columnName: 'label', width: 100 },\r\n    { columnName: 'categorie', width: 100},\r\n    { columnName: 'info', width: 300 },\r\n    { columnName: 'image', width: 200 },\r\n    { columnName: 'link', width: 200 },\r\n  ],\r\n  ['id', 'label', 'categorie', 'info', 'image', 'link'],\r\n  {\r\n    id: (rows) => (rows.length > 0) ? Math.max(...rows.map((r) => r.id)) + 1 : 0,\r\n    label: \"\",\r\n    categorie: availableValues.categorie[0],\r\n    info: \"\",\r\n    image: \"\",\r\n    link: \"\"\r\n  },\r\n  (props, changedRows) => {props.setNodes(changedRows.map((r) => {return {...r, id: parseInt(String(r.id))}}))}\r\n)\r\n\r\nconst reprEdges = (edges) => edges.map((e_) => {\r\n  let e = Object.assign({}, e_)\r\n  e.direction = String(e.direction)\r\n  return e\r\n})\r\n\r\nconst recoverEdges = (rows) => rows.map((e_) => {\r\n  let e = Object.assign({}, e_)\r\n  e.id = parseInt(String(e.id))\r\n  e.direction = (e.direction === \"false\") ? false : true\r\n  return e\r\n})\r\n\r\nconst EdgeGrid = createGrid(\r\n  [\r\n    { name: 'id', title: 'ID' },\r\n    { name: 'from', title: 'from' },\r\n    { name: 'to', title: 'to' },\r\n    { name: 'label', title: '标签' },\r\n    { name: 'direction', title: '有向？' }\r\n  ],\r\n  (props) => reprEdges(props.edges),\r\n  [\r\n    { columnName: 'id', width: 100 },\r\n    { columnName: 'from', width: 100 },\r\n    { columnName: 'to', width: 100},\r\n    { columnName: 'label', width: 120 },\r\n    { columnName: 'direction', width: 100 },\r\n  ],\r\n  ['id', 'from', 'to', 'label', 'direction'],\r\n  {\r\n    id: (rows) => (rows.length > 0) ? Math.max(...rows.map((r) => r.id)) + 1 : 0,\r\n    label: \"\",\r\n    direction: availableValues.direction[0],\r\n    info: \"\",\r\n    image: \"\",\r\n    link: \"\"\r\n  },\r\n  (props, changedRows) => {props.setEdges(recoverEdges(changedRows))}\r\n)\r\n\r\nconst reprCats = (cats) => {\r\n  let rows = []\r\n  for (const [k, v] of Object.entries(cats)) {\r\n    let row = Object.assign({id: k}, v)\r\n    rows.push(row)\r\n  }\r\n  return rows\r\n}\r\n\r\nconst recoverCats = (rows) => {\r\n  let cats = {}\r\n  for (const r of rows) {\r\n    let v = Object.assign({}, r)\r\n    delete v.id\r\n    cats[r.id] = v\r\n  }\r\n  return cats\r\n}\r\n\r\nconst CatGrid = createGrid(\r\n  [\r\n    { name: 'id', title: 'ID' },\r\n    { name: 'label', title: '标签' },\r\n    { name: 'color', title: '颜色' }\r\n  ],\r\n  (props) => {\r\n    const cats = props.cats\r\n    availableValues.categorie = Object.keys(cats)\r\n    return reprCats(cats)\r\n  },\r\n  [\r\n    { columnName: 'id', width: 200 },\r\n    { columnName: 'label', width: 200 },\r\n    { columnName: 'color', width: 200},\r\n  ],\r\n  ['id', 'label', 'color'],\r\n  {\r\n    id: \"\",\r\n    label: \"\",\r\n    color: \"#aaaaaa\"\r\n  },\r\n  (props, changedRows) => {\r\n    availableValues.categorie = changedRows.map((r) => r.id)\r\n    props.setCats(recoverCats(changedRows))\r\n  }\r\n)\r\n\r\nexport { NodeGrid, EdgeGrid, CatGrid }\r\n","import React, {Component} from \"react\";\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\n\r\n\r\ntype CommentsProps = {\r\n  issueTerm: string,\r\n}\r\n\r\n/**\r\n * Reference:\r\n *   + https://github.com/utterance/utterances/issues/161\r\n *   + https://material-ui.com/zh/components/accordion/\r\n */\r\nexport default class Comments extends Component<CommentsProps, {}> {\r\n\r\n  componentDidMount () {\r\n      let script = document.createElement(\"script\");\r\n      let anchor = document.getElementById(\"inject-comments-for-uterances\");\r\n      if (anchor !== null) {\r\n        script.setAttribute(\"src\", \"https://utteranc.es/client.js\");\r\n        script.setAttribute(\"crossorigin\", \"anonymous\");\r\n        script.setAttribute(\"async\", \"true\");\r\n        script.setAttribute(\"repo\", \"AniNet-Project/aninet-project.github.io\");\r\n        script.setAttribute(\"issue-term\", this.props.issueTerm);\r\n        script.setAttribute( \"theme\", \"github-light\");\r\n        anchor.appendChild(script);\r\n      }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <>\r\n          <div className=\"comments\">\r\n\r\n          <Accordion>\r\n            <AccordionSummary\r\n              expandIcon={<ExpandMoreIcon />}\r\n              aria-controls=\"panel1a-content\"\r\n            >\r\n              <Typography>评论区</Typography>\r\n            </AccordionSummary>\r\n            <AccordionDetails id=\"comments-content\">\r\n              <div id=\"inject-comments-for-uterances\"></div>\r\n            </AccordionDetails>\r\n          </Accordion>\r\n\r\n          </div>\r\n        </>\r\n    );\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs'\r\nimport 'react-tabs/style/react-tabs.css'\r\n\r\nimport './NetPage.css'\r\nimport Header from './Header'\r\nimport Footer from './Footer'\r\nimport ToolBar from './ToolBar'\r\nimport NetView from './NetView'\r\nimport TimeSlider from './TimeSlider'\r\nimport {NetItem, TimePoint, ItemInfo, NodeType, EdgeType, CatType} from './datatypes'\r\nimport { NodeGrid, EdgeGrid, CatGrid } from './EditGrid'\r\nimport Comments from './Comments'\r\n\r\n\r\n\r\nconst preProcessInfo = (info: ItemInfo) => {\r\n  let new_nodes: Array<NodeType> = []\r\n  for (let n of info.data.nodes) {\r\n    n.id = parseInt(String(n.id))\r\n    new_nodes.push(n)\r\n  }\r\n  info.data.nodes = new_nodes\r\n  return info\r\n}\r\n\r\n\r\ntype NetPageProps = {\r\n  item: NetItem\r\n}\r\n\r\ntype NetPageState = {\r\n  error: null | Error,\r\n  isLoaded: boolean,\r\n  timesInfo: Array<ItemInfo>,\r\n  currentTime: number,\r\n  timePoints: Array<TimePoint>,\r\n  nodeCache: Array<Record<number, NodeType>>\r\n}\r\n\r\n\r\nclass NetPage extends React.Component<NetPageProps, NetPageState> {\r\n  constructor(props: NetPageProps) {\r\n    super(props)\r\n    this.state = {\r\n      error: null,\r\n      isLoaded: false,\r\n      timesInfo: [],\r\n      currentTime: 0,\r\n      timePoints: [],\r\n      nodeCache: [],\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    let item = this.props.item\r\n    let timepoints: Array<TimePoint> = []\r\n    if (typeof item.url === \"string\") {\r\n      timepoints.push({label: \"common\", url: item.url})\r\n    } else {\r\n      timepoints = item.url\r\n    }\r\n    this.setState({timesInfo: new Array(timepoints.length)})\r\n    Promise.all(\r\n      timepoints.map((t) => fetch(t.url).then(resp => resp.json()))\r\n    )\r\n    .then( infos_ => {\r\n      const infos = infos_ as [ItemInfo]\r\n      this.setState({\r\n        isLoaded: true,\r\n        timesInfo: infos.map(info => preProcessInfo(info)),\r\n        timePoints: timepoints,\r\n        nodeCache: infos.map(info => {\r\n          let cache: Record<number, NodeType> = {}\r\n          for (const n of info.data.nodes) {\r\n            cache[n.id] = n\r\n          }\r\n          return cache\r\n        })\r\n      })\r\n    },\r\n    (error) => {\r\n      this.setState({\r\n        isLoaded: true,\r\n        error\r\n      })\r\n    })\r\n  }\r\n\r\n  setNodes(nodes: Array<NodeType>) {\r\n    let times = this.state.timesInfo\r\n    let info = times[this.state.currentTime]\r\n    if (info !== null) {\r\n      info.data.nodes = nodes\r\n      this.setState({timesInfo: times})\r\n    }\r\n  }\r\n\r\n  setEdges(edges: Array<EdgeType>) {\r\n    let times = this.state.timesInfo\r\n    let info = times[this.state.currentTime]\r\n    if (info !== null) {\r\n      info.data.edges = edges\r\n      this.setState({timesInfo: times})\r\n    }\r\n  }\r\n\r\n  setCategories(categories: Record<string, CatType>) {\r\n    let times = this.state.timesInfo\r\n    let info = times[this.state.currentTime]\r\n    if (info != null) {\r\n      info.categories = categories\r\n      this.setState({timesInfo: times})\r\n    }\r\n  }\r\n\r\n  setInfo(info: ItemInfo) {\r\n    let times = this.state.timesInfo\r\n    times[this.state.currentTime] = info\r\n    this.setState({timesInfo: times})\r\n  }\r\n\r\n  setCurrentTime(t: number) {\r\n    this.setState({currentTime: t})\r\n  }\r\n\r\n  queryNodes(q:string, reverse:boolean = false) {\r\n    let query_type = \"label\"\r\n    let query_text = \"\"\r\n    const items = q.split(\":\")\r\n    if (items.length === 1) {\r\n      query_text = items[0]\r\n    } else if (items.length === 2) {\r\n      query_type = items[0]\r\n      query_text = items[1].trim()\r\n    } else {\r\n      return []\r\n    }\r\n    let res = []\r\n\r\n    const times = this.state.timesInfo\r\n    const info = times[this.state.currentTime]\r\n    const nodeCache = this.state.nodeCache[this.state.currentTime]\r\n    const nodes = info.data.nodes\r\n    const toggle = (cond: boolean) => reverse ? (!cond) : cond\r\n    try {\r\n      if (query_type === \"id\") {\r\n        const n = nodeCache[parseInt(query_text)]\r\n        if (n !== undefined) {\r\n          res.push(n)\r\n        }\r\n      } else {\r\n        const pattern = new RegExp(query_text)\r\n        for (let n of nodes) {\r\n          if (!(query_type in n)) {continue}\r\n          const val = (n as any)[query_type]\r\n          if (toggle(pattern.test(String(val)))) {\r\n            res.push(n)\r\n          }\r\n        }\r\n      }\r\n      return res\r\n    } catch(e) {\r\n      console.log(e)\r\n      return []\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let item = this.props.item\r\n    const { error, isLoaded, timesInfo, currentTime } = this.state\r\n    if (error) {\r\n      return <div>Error: {error.message}</div>\r\n    } else if (!isLoaded) {\r\n      return <div>Loading...</div>\r\n    } else {\r\n      const info = timesInfo[currentTime]\r\n      return (\r\n        <div>\r\n          <Header title={item.name}/>\r\n          <div className=\"container\">\r\n          <ToolBar\r\n            info={info}\r\n            setInfo={this.setInfo.bind(this)}\r\n            queryNodes={this.queryNodes.bind(this)}\r\n            />\r\n          <div className=\"tabs\">\r\n            <Tabs>\r\n              <TabList>\r\n                <Tab>网络视图</Tab>\r\n                <Tab>节点(Nodes)</Tab>\r\n                <Tab>边(Edges)</Tab>\r\n                <Tab>节点类别</Tab>\r\n              </TabList>\r\n              <TabPanel forceRender={true}>\r\n                <NetView\r\n                  info={info}\r\n                  setNodes={this.setNodes.bind(this)}\r\n                  queryNodes={this.queryNodes.bind(this)}\r\n                  />\r\n              </TabPanel>\r\n              <TabPanel forceRender={true}>\r\n                <NodeGrid nodes={info.data.nodes} setNodes={this.setNodes.bind(this)}/>\r\n              </TabPanel>\r\n              <TabPanel forceRender={true}>\r\n                <EdgeGrid edges={info.data.edges} setEdges={this.setEdges.bind(this)}/>\r\n              </TabPanel>\r\n              <TabPanel forceRender={true}>\r\n                <CatGrid cats={info.categories} setCats={this.setCategories.bind(this)}/>\r\n              </TabPanel>\r\n            </Tabs>\r\n          </div>\r\n\r\n          <TimeSlider\r\n            time={this.state.currentTime}\r\n            timePoints={this.state.timePoints}\r\n            setTime={this.setCurrentTime.bind(this)}\r\n          />\r\n\r\n          <Comments issueTerm={item.name}/>\r\n\r\n          </div>\r\n          <Footer/>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n}\r\n\r\nexport default NetPage\r\n","/**\r\n * Come from here:\r\n *   https://medium.com/young-developer/react-markdown-code-and-syntax-highlighting-632d2f9b4ada\r\n */\r\n\r\nimport React, { PureComponent } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Prism as SyntaxHighlighter } from \"react-syntax-highlighter\";\r\n\r\ntype CodeBlockProps = {\r\n    language: string,\r\n    value: string,\r\n}\r\n\r\nclass CodeBlock extends PureComponent<CodeBlockProps, {}> {\r\n  static propTypes = {\r\n    value: PropTypes.string.isRequired,\r\n    language: PropTypes.string\r\n  };\r\n\r\n  static defaultProps = {\r\n    language: null\r\n  };\r\n\r\n  render() {\r\n    const { language, value } = this.props;\r\n    return (\r\n      <SyntaxHighlighter language={language}>\r\n        {value}\r\n      </SyntaxHighlighter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CodeBlock;\r\n","import React from 'react'\r\nimport ReactMarkdown from 'react-markdown'\r\n\r\nimport CodeBlock from \"./CodeBlock\"\r\nimport Header from './Header'\r\nimport Footer from './Footer'\r\nimport './DocPage.css'\r\n\r\n\r\ntype DocPageProps = {\r\n  title: string,\r\n  sourceUrl: string,\r\n}\r\ntype DocPageState = {\r\n  error: null | Error,\r\n  isLoaded: boolean,\r\n  content: string | null,\r\n}\r\n\r\n\r\nexport default class DocPage extends React.Component<DocPageProps, DocPageState> {\r\n  constructor(props: DocPageProps) {\r\n    super(props)\r\n    this.state = {\r\n      error: null,\r\n      isLoaded: false,\r\n      content: null,\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const url = this.props.sourceUrl\r\n    fetch(url)\r\n      .then(res => res.text())\r\n      .then((data) => {\r\n        this.setState({\r\n          isLoaded: true,\r\n          content: data\r\n        })\r\n      },\r\n      (error) => {\r\n        this.setState({\r\n          isLoaded: true,\r\n          error\r\n        })\r\n      })\r\n  }\r\n\r\n  render() {\r\n    const { error, isLoaded, content } = this.state\r\n    if (error) {\r\n      return <div>Error: {error.message}</div>\r\n    } else if (!isLoaded) {\r\n      return <div>Loading...</div>\r\n    } else {\r\n      return (\r\n        <>\r\n          <Header title={this.props.title}/>\r\n          <div className=\"container\">\r\n            <div className=\"doc\">\r\n              <ReactMarkdown\r\n                source={content as string}\r\n                renderers={{ code: CodeBlock }}\r\n                escapeHtml={false}\r\n              />\r\n            </div>\r\n          </div>\r\n          <Footer/>\r\n        </>\r\n      )\r\n    }\r\n  }\r\n\r\n}\r\n","import React from 'react';\r\nimport {\r\n  HashRouter as Router,\r\n  Route\r\n} from 'react-router-dom'\r\nimport './App.css';\r\nimport NetPage from './NetPage'\r\nimport Header from './Header'\r\nimport Footer from './Footer'\r\nimport { NetItem } from './datatypes';\r\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport DocPage from './DocPage';\r\n\r\ntype CardProps = {\r\n  item: NetItem\r\n}\r\n\r\nclass Card extends React.Component<CardProps, object> {\r\n  render() {\r\n    let item = this.props.item\r\n    return (\r\n      <a href={\"#/network/\"+item.name}>\r\n      <div className=\"card\">\r\n        <img className=\"titleImg\" src={item.titleImg} alt={item.name}></img>\r\n        <p className=\"name\">{item.name}</p>\r\n      </div>\r\n      </a>\r\n    )\r\n  }\r\n}\r\n\r\nclass NewCard extends React.Component<CardProps, object> {\r\n  render() {\r\n    let item = this.props.item\r\n    return (\r\n        <div className=\"card\" id=\"newCard\">\r\n          <a href={\"#/network/\"+item.name}>\r\n            <Tooltip title=\"新建空白页\" placement=\"top\">\r\n              <IconButton type=\"submit\" id=\"newPageButton\" >\r\n                <AddCircleOutlineIcon id=\"newPageIcon\"/>\r\n              </IconButton>\r\n            </Tooltip>\r\n          </a>\r\n        </div>\r\n    )\r\n  }\r\n}\r\n\r\ntype CardsProps = {\r\n  items: Array<NetItem>\r\n}\r\n\r\nclass Cards extends React.Component<CardsProps, object> {\r\n  render() {\r\n    const items = this.props.items\r\n    return (\r\n      <div className=\"cards\">\r\n        {items.map(item => (\r\n          (item.name === \"新建网络\")\r\n          ? <NewCard key={item.name} item={item}/>\r\n          : <Card key={item.name} item={item}/>\r\n        ))}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\ntype HomeProps = {\r\n  items: Array<NetItem>\r\n}\r\n\r\nclass Home extends React.Component<HomeProps, object> {\r\n  render() {\r\n    let items = this.props.items\r\n    return (\r\n      <div className=\"App\">\r\n        <Header title=\"ACG人物关系可视化\"/>\r\n        <div className=\"contents\">\r\n          <div className=\"container\">\r\n            <Cards items={items}/>\r\n          </div>\r\n        </div>\r\n        <Footer/>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\ntype AppProps = {}\r\ntype AppState = {\r\n  error: Error | null,\r\n  isLoaded: boolean,\r\n  items: Array<NetItem>\r\n}\r\n\r\nclass App extends React.Component<AppProps, AppState> {\r\n  constructor(props: AppProps) {\r\n    super(props)\r\n    this.state = {\r\n      error: null,\r\n      isLoaded: false,\r\n      items: []\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch(\"networks.json\")\r\n      .then(res => res.json())\r\n      .then((data) => {\r\n        this.setState({\r\n          isLoaded: true,\r\n          items: data\r\n        })\r\n      },\r\n      (error) => {\r\n        this.setState({\r\n          isLoaded: true,\r\n          error\r\n        })\r\n      })\r\n  }\r\n\r\n  render() {\r\n    let { error, isLoaded, items } = this.state\r\n    const emptyItem = {name: \"新建网络\", titleImg: \"\", url: \"data/empty.json\"}\r\n    items = items.concat([emptyItem])\r\n    if (error) {\r\n      return <div>Error: {error.message}</div>\r\n    } else if (!isLoaded) {\r\n      return <div>Loading...</div>\r\n    } else {\r\n      return (\r\n        <Router basename=\"/\">\r\n          <Route key=\"home\" exact path=\"/\" component={() => <Home items={items}/>} />\r\n          {items.map(item => (\r\n            <Route key={item.name} path={\"/network/\"+item.name}\r\n                   component={() => <NetPage item={item}/>} />\r\n          ))}\r\n          <Route key=\"contribute\" path={\"/contribute\"}\r\n                 component={() => <DocPage title=\"如何贡献\" sourceUrl={\"docs/contribute.md\"}/>} />\r\n          <Route key=\"about\" path={\"/about\"}\r\n                 component={() => <DocPage title=\"关于\" sourceUrl={\"docs/about.md\"}/>}\r\n                 />\r\n        </Router>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}