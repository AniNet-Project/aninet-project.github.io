{"version":3,"sources":["Header.tsx","Footer.tsx","ToolBar.tsx","utils.ts","Dialogs.tsx","InfoBoard.tsx","CircularProgressWithLabel.tsx","NetView.tsx","TimeSlider.tsx","EditGrid.js","Comments.tsx","NetPage.tsx","CodeBlock.tsx","DocPage.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Header","className","href","this","props","title","React","Component","Busuanzi","window","location","endsWith","id","Footer","buildFileSelector","setInfo","fileSelector","document","createElement","setAttribute","addEventListener","event","file","target","files","reader","FileReader","onload","JSON","parse","result","undefined","readAsText","UploadBtn","handleFileSelect","e","preventDefault","state","click","setState","onClick","ToolBar","objectData","fileName","navigator","msSaveOrOpenBlob","blob","Blob","decodeURIComponent","encodeURI","stringify","type","a","download","encodeURIComponent","body","appendChild","removeChild","exportToJson","info","EditOptionsDialog","open","content","setTextArea","opt","getOpt","value","options","setOpt","err","console","log","ta","getElementById","style","border","tip","innerHTML","color","fontSize","Tooltip","placement","handleClickOpen","Dialog","onClose","handleClose","aria-labelledby","DialogTitle","DialogContent","DialogContentText","rows","cols","onChange","textChanged","DialogActions","Button","handleClickConfirm","SearchDialog","queryText","q","queryAndFocus","key","handleClickSearch","InputBase","onKeyPress","handlePressEnter","placeholder","IconButton","FilterDialog","reverse","queryAndFilter","reset","handleClickFilter","checked","handleClickReset","Checkbox","handleChangeReverse","defaultOpt","oldOpt","atlas","Object","assign","physics","solver","forceAtlas2Based","entries","gravitationalConstant","centralGravity","springLength","springConstant","k","v","edges","font","size","GravitationalConstantSlider","useState","setValue","Typography","gutterBottom","Slider","newValue","min","max","valueLabelDisplay","SpringConstantSlider","Math","log10","newVal","step","valueLabelFormat","CustomSwitch","withStyles","switchBase","backgroundColor","track","Switch","PhysicsSwitch","enabled","name","HiddenEdgeLabelSwitch","TuneDialog","InforBoardSwitch","FormControlLabel","control","switchState","setSwitch","label","labelPlacement","HiddenUnselectedSwitch","SettingDialog","inforBoardSwitch","setInforBoardSwitch","hiddenUnselectedSwitch","setHiddenUnselectedSwitch","node","pos","cat","cats","categorie","boardStyle","top","y","left","x","catStyle","close","src","image","alt","str","limit","res","length","slice","shorterString","link","Box","position","display","CircularProgress","bottom","right","alignItems","justifyContent","variant","component","round","getCanvas","getElementsByTagName","DefaultNetStyle","ViewControl","fullScreenMode","setFullScreenMode","oriHeight","turnBackSize","height","captureImg","exitFullscreen","canvas","fullRegion","requestFullscreen","clientHeight","screen","fullscreenElement","DEFAULT_NETWORK_OPTIONS","autoResize","nodes","shape","stabilization","width","inherit","interaction","hideEdgesOnDrag","hover","multiselect","NetView","infoBoard","loadingRatio","netRef","createRef","netOptions","oldNodes","data","on","oldState","resetNodes","hiddenNonSelected","params","node_id","current","network","getNodeAt","pointer","DOM","select_node","create_board","find","n","InfoBoard","categories","board","handlePopup","handleHidden","setOptions","setNetOptions","registerLoading","createLoadindBar","ref","handleClick","map","catgories","borderWidth","createNode","arrows","from","to","createEdge","self","ratio","iterations","total","once","context","getContext","save","globalCompositeOperation","fillStyle","fillRect","restore","url","toDataURL","replace","query_type","query_text","items","split","trim","toggle","cond","pattern","RegExp","val","parseInt","push","test","String","queryNodes","selectNodes","nodes_id","fit","animation","focus","scale","setNodes","selected","getSelectedNodes","closure","Set","nid","add","connected","getConnectedNodes","nid2","getSelectedClosure","has","createNetwork","bind","getNetOptions","queryNodesAndFocus","queryNodesAndFilter","useStyles","makeStyles","theme","createStyles","root","margin","spacing","timePoints","classes","i","marks","t","defaultValue","time","setTime","commandComponents","onExecute","textAlign","edit","delete","confirm","commit","cancel","Command","CommandButton","availableValues","direction","LookupEditCell","lookupEditCell","padding","dialog","inputRoot","selectMenu","availableColumnValues","onValueChange","TableCell","Select","MenuProps","input","Input","item","MenuItem","EditCell","column","Cell","getRowId","row","createGrid","colDef","getParentState","widthDef","colOrder","defaultDef","setParentState","columns","tableColumnExtensions","sorting","editingRowIds","addedRows","rowChanges","currentPage","pageSize","pageSizes","columnOrder","leftFixedColumns","TableEditColumn","COLUMN_TYPE","totalSummaryItems","defaultRow","keys","deletedIds","rowsForDelete","forEach","rowId","index","findIndex","splice","changedRows","added","changed","deleted","startingAddedId","deleteRows","nextProps","newRows","Paper","onSortingChange","s","onCurrentPageChange","c","onPageSizeChange","onEditingRowIdsChange","ids","onRowChangesChange","onAddedRowsChange","changeAddedRows","onCommitChanges","commitChanges","totalItems","columnExtensions","order","onOrderChange","showSortingControls","cellComponent","showAddCommand","showEditCommand","showDeleteCommand","commandComponent","leftColumns","NodeGrid","columnName","r","EdgeGrid","e_","setEdges","CatGrid","reprCats","setCats","recoverCats","Comments","script","anchor","issueTerm","Accordion","AccordionSummary","expandIcon","aria-controls","AccordionDetails","NetPage","error","isLoaded","timesInfo","currentTime","timepoints","Array","Promise","all","fetch","then","resp","json","infos","new_nodes","preProcessInfo","times","message","forceRender","setCategories","TimeSlider","setCurrentTime","CodeBlock","language","PureComponent","defaultProps","DocPage","sourceUrl","text","source","renderers","code","escapeHtml","Card","titleImg","NewCard","Cards","Home","App","concat","basename","exact","path","Boolean","hostname","match","ReactDOM","render","StrictMode","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.3310e48a.chunk.js","sourcesContent":["import React from 'react'\r\n\r\ntype HeaderProps = {\r\n  title: string;\r\n}\r\n\r\nexport default class Header extends React.Component<HeaderProps, object> {\r\n  render() {\r\n    return (\r\n      <header>\r\n        <div className=\"page-title\">\r\n          <div className=\"container\">\r\n            <div className=\"topbar\">\r\n              <a href=\"https://github.com/AniNet-Project\">\r\n                GitHub\r\n              </a>\r\n              <a href=\"#/about\">\r\n                关于\r\n              </a>\r\n              <a href=\"#/contribute\">\r\n                如何贡献\r\n              </a>\r\n            </div>\r\n          </div>\r\n          <div className=\"container title\">\r\n            <p className=\"sub\">\r\n              <a href=\"/\">\r\n                AniNet\r\n              </a>\r\n            </p>\r\n            <h1>{this.props.title}</h1>\r\n          </div>\r\n        </div>\r\n      </header>\r\n    )\r\n  }\r\n}\r\n","import React from 'react'\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\nimport EmailIcon from '@material-ui/icons/Email';\r\n\r\n\r\nconst Busuanzi = () => {\r\n  const isHome = window.location.href.endsWith('#/')\r\n  if (isHome) {\r\n    return (\r\n      <div className=\"busuanzi\">\r\n        <span id=\"busuanzi_container_site_pv\"> 本站总访问量<span id=\"busuanzi_value_site_pv\"></span>次 </span>\r\n      </div>\r\n    )\r\n  } else {\r\n    return (\r\n      <></>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default class Footer extends React.Component<object, object> {\r\n  render() {\r\n    return (\r\n      <div className=\"footer\">\r\n        <div className=\"container\">\r\n          <a href=\"https://github.com/AniNet-Project\">\r\n            <GitHubIcon/>\r\n          </a>\r\n          <a href=\"mailto:nanguage@yahoo.com\">\r\n            <EmailIcon id=\"email-icon\"/>\r\n          </a>\r\n\r\n          <Busuanzi/>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React from 'react'\r\n\r\nimport { exportToJson } from './utils'\r\nimport { ItemInfo } from './datatypes'\r\n\r\ntype setInfoMth = (info: ItemInfo) => void\r\n\r\nconst buildFileSelector = (setInfo: setInfoMth) => {\r\n  const fileSelector = document.createElement('input');\r\n  fileSelector.setAttribute('type', 'file');\r\n  fileSelector.setAttribute('multiple', 'multiple');\r\n  fileSelector.setAttribute('accept', '.json')\r\n  fileSelector.addEventListener('change', (event) => {\r\n    const target = event.target as HTMLInputElement\r\n    let file: File = (target.files as FileList)[0]\r\n    let reader = new FileReader()\r\n    reader.onload = () => {\r\n      setInfo(JSON.parse(reader.result as string))\r\n    }\r\n    if (file !== undefined) {\r\n      reader.readAsText(file)\r\n    }\r\n  })\r\n  return fileSelector;\r\n}\r\n\r\ntype UploadBtnProps = {\r\n  setInfo: setInfoMth\r\n}\r\n\r\ntype UploadBtnState = {\r\n  fileSelector: HTMLInputElement,\r\n}\r\n\r\nclass UploadBtn extends React.Component<UploadBtnProps, UploadBtnState> {\r\n  componentDidMount(){\r\n    this.setState({\r\n      fileSelector: buildFileSelector(this.props.setInfo)\r\n    })\r\n  }\r\n  \r\n  handleFileSelect = (e: React.MouseEvent) => {\r\n    e.preventDefault();\r\n    this.state.fileSelector.click();\r\n  }\r\n  \r\n  render(){\r\n    return <button onClick={this.handleFileSelect}>打开文件 (JSON)</button>\r\n  }\r\n}\r\n\r\ntype ToolBarProps = {\r\n  info: ItemInfo,\r\n  setInfo: setInfoMth,\r\n}\r\n\r\n\r\nexport default class ToolBar extends React.Component<ToolBarProps, object> {\r\n  render() {\r\n    return (\r\n      <div className=\"toolbar\">\r\n        <div className=\"rightside\">\r\n          <UploadBtn setInfo={this.props.setInfo}/>\r\n          <button onClick={() => {exportToJson(this.props.info, \"export.json\")}}>保存文件 (JSON)</button>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","\r\nconst exportToJson = (objectData: any, fileName: string) => {\r\n  let contentType = \"application/json;charset=utf-8;\";\r\n  if (window.navigator && window.navigator.msSaveOrOpenBlob) {\r\n    var blob = new Blob([decodeURIComponent(encodeURI(JSON.stringify(objectData)))], { type: contentType });\r\n    navigator.msSaveOrOpenBlob(blob, fileName);\r\n  } else {\r\n    var a = document.createElement('a');\r\n    a.download = fileName;\r\n    a.href = 'data:' + contentType + ',' + encodeURIComponent(JSON.stringify(objectData, null, 2));\r\n    a.target = '_blank';\r\n    document.body.appendChild(a);\r\n    a.click();\r\n    document.body.removeChild(a);\r\n  }\r\n}\r\n\r\n\r\nconst shorterString = (str: string, limit: number) => {\r\n  let res = \"\" + str\r\n  if (str.length > limit) {\r\n    res = str.slice(0, limit) \r\n    res += \"...\"\r\n  }\r\n  return res\r\n}\r\n\r\n\r\nexport {exportToJson, shorterString}\r\n","import React, {useState} from 'react'\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FilterListIcon from '@material-ui/icons/FilterList';\r\nimport AutorenewIcon from '@material-ui/icons/Autorenew';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport TuneIcon from '@material-ui/icons/Tune';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\n\r\n\r\ntype EditOptionsDialogProps = {\r\n  setOpt: (opt: any) => void,\r\n  getOpt: () => any,\r\n}\r\ntype EditOptionsDialogState = {\r\n  open: boolean,\r\n  content: string,\r\n}\r\n\r\nclass EditOptionsDialog extends React.Component<EditOptionsDialogProps, EditOptionsDialogState> {\r\n  constructor(props: EditOptionsDialogProps) {\r\n    super(props)\r\n    this.state = {\r\n      open: false,\r\n      content: \"\"\r\n    }\r\n  }\r\n\r\n  handleClickOpen() {\r\n    this.setState({open: true})\r\n    this.setTextArea()\r\n  };\r\n\r\n  handleClose() {\r\n    this.setState({open: false})\r\n  };\r\n\r\n  setTextArea() {\r\n    let opt = this.props.getOpt()\r\n    let content = JSON.stringify(opt, null, 2)\r\n    this.setState({content: content})\r\n  }\r\n\r\n  textChanged(event: any) {\r\n    this.setState({\r\n      content: event.target.value\r\n    })\r\n  }\r\n\r\n  handleClickConfirm() {\r\n    let options;\r\n    try {\r\n      options = JSON.parse(this.state.content)\r\n      this.props.setOpt(options)\r\n      this.setState({open: false})\r\n    } catch(err) {\r\n      console.log(err)\r\n      let ta = document.getElementById(\"edit-options-content\")\r\n      if (ta !== null) {\r\n        ta.style.border = \"2px solid #ff3333\"\r\n      }\r\n      let tip = document.getElementById(\"edit-options-tips\")\r\n      console.log(tip)\r\n      if (tip !== null) {\r\n        tip.innerHTML = \"JSON 解析失败，请检查。\"\r\n        tip.style.color = \"#ff3333\"\r\n        tip.style.fontSize = \"10px\"\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"EditOptionsDialog\">\r\n        <Tooltip title=\"编辑视图配置\" placement=\"top\">\r\n          <EditIcon onClick={() => {this.handleClickOpen()}}/>\r\n        </Tooltip>\r\n        <Dialog open={this.state.open} onClose={() => {this.handleClose()}} aria-labelledby=\"form-dialog-title\">\r\n          <DialogTitle id=\"form-dialog-title\">编辑网络视图配置</DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText>\r\n              直接通过 JSON 对网络视图进行配置，可配置项目细节可以参考\r\n              <a href=\"https://visjs.github.io/vis-network/docs/network/\">vis-network 文档</a> 。\r\n            </DialogContentText>\r\n            <p id=\"edit-options-tips\"> </p>\r\n            <textarea id=\"edit-options-content\"\r\n              rows={18} cols={72}\r\n              value={this.state.content}\r\n              onChange={(e) => {this.textChanged(e)}}\r\n              />\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={() => {this.handleClose()}} color=\"primary\">\r\n              取消\r\n            </Button>\r\n            <Button onClick={() => {this.handleClickConfirm()}} color=\"primary\">\r\n              确定\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\ntype SearchDialogProps = {\r\n  queryAndFocus: (q: string) => void,\r\n}\r\ntype SearchDialogState = {\r\n  open: boolean,\r\n  queryText: string,\r\n}\r\n\r\nclass SearchDialog extends React.Component<SearchDialogProps, SearchDialogState> {\r\n  constructor(props: SearchDialogProps) {\r\n    super(props)\r\n    this.state = {\r\n      open: false,\r\n      queryText: \"\",\r\n    }\r\n  }\r\n\r\n  handleClickOpen() {\r\n    this.setState({open: true})\r\n  };\r\n\r\n  handleClose() {\r\n    this.setState({open: false})\r\n  };\r\n\r\n  handleClickSearch() {\r\n    const q = this.state.queryText\r\n    this.props.queryAndFocus(q)\r\n    this.setState({open: false, queryText: \"\"})\r\n  }\r\n\r\n  textChanged(event: any) {\r\n    this.setState({\r\n      queryText: event.target.value\r\n    })\r\n  }\r\n\r\n  handlePressEnter(event: any) {\r\n    if (event.key === \"Enter\") {\r\n      this.handleClickSearch()\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Tooltip title=\"搜索\" placement=\"top\">\r\n          <SearchIcon onClick={() => this.handleClickOpen()}/>\r\n        </Tooltip>\r\n        <Dialog open={this.state.open} onClose={() => {this.handleClose()}} aria-labelledby=\"form-dialog-title\">\r\n          <DialogContent id=\"searchDialog\">\r\n            <InputBase\r\n              value={this.state.queryText}\r\n              onChange={(e) => this.textChanged(e)}\r\n              onKeyPress={(e) => this.handlePressEnter(e)}\r\n              placeholder=\"输入节点标签（如，label:苍崎青子）或ID（如，id:1）\"\r\n            />\r\n            <IconButton type=\"submit\" onClick={() => this.handleClickSearch()} >\r\n              <SearchIcon/>\r\n            </IconButton>\r\n          </DialogContent>\r\n        </Dialog>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\n\r\ntype FilterDialogProps = {\r\n  queryAndFilter: (q: string, reverse: boolean) => void,\r\n  reset: () => void,\r\n}\r\ntype FilterDialogState = {\r\n  open: boolean,\r\n  queryText: string,\r\n  reverse: boolean,\r\n}\r\n\r\nclass FilterDialog extends React.Component<FilterDialogProps, FilterDialogState> {\r\n  constructor(props: FilterDialogProps) {\r\n    super(props)\r\n    this.state = {\r\n      open: false,\r\n      queryText: \"\",\r\n      reverse: true,\r\n    }\r\n  }\r\n\r\n  handleClickOpen() {\r\n    this.setState({open: true})\r\n  };\r\n\r\n  handleClose() {\r\n    this.setState({open: false})\r\n  };\r\n\r\n  handleClickFilter() {\r\n    const q = this.state.queryText\r\n    this.props.queryAndFilter(q, this.state.reverse)\r\n    this.setState({open: false, queryText: \"\"})\r\n  }\r\n\r\n  handleClickReset() {\r\n      this.props.reset()\r\n      this.setState({open: false, queryText: \"\"})\r\n  }\r\n\r\n  textChanged(event: any) {\r\n    this.setState({\r\n      queryText: event.target.value\r\n    })\r\n  }\r\n\r\n  handlePressEnter(event: any) {\r\n    if (event.key === \"Enter\") {\r\n      this.handleClickFilter()\r\n    }\r\n  }\r\n\r\n  handleChangeReverse(event: any) {\r\n    this.setState({\r\n      reverse: event.target.checked\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Tooltip title=\"筛选\" placement=\"top\">\r\n          <FilterListIcon onClick={() => this.handleClickOpen()}/>\r\n        </Tooltip>\r\n        <Dialog open={this.state.open} onClose={() => {this.handleClose()}} aria-labelledby=\"form-dialog-title\">\r\n          <DialogContent id=\"filterDialog\">\r\n            <InputBase\r\n              value={this.state.queryText}\r\n              onChange={(e) => this.textChanged(e)}\r\n              onKeyPress={(e) => this.handlePressEnter(e)}\r\n              placeholder=\"用于筛选的属性和正则表达式（如：categorie:person）\"\r\n            />\r\n            <IconButton type=\"submit\" onClick={() => this.handleClickFilter()} >\r\n              <Tooltip title=\"筛选\" placement=\"top\">\r\n                <FilterListIcon/>\r\n              </Tooltip>\r\n            </IconButton>\r\n            <IconButton type=\"submit\" onClick={() => this.handleClickReset()} >\r\n              <Tooltip title=\"重置\" placement=\"top\">\r\n                <AutorenewIcon/>\r\n              </Tooltip>\r\n            </IconButton>\r\n            <Tooltip title=\"反选\" placement=\"top\">\r\n              <Checkbox checked={this.state.reverse} onChange={(e) => this.handleChangeReverse(e)}/>\r\n            </Tooltip>\r\n          </DialogContent>\r\n        </Dialog>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nconst defaultOpt = (oldOpt: any) => {\r\n  const opt = Object.assign({}, oldOpt)\r\n  if (!(\"physics\" in opt)) { opt.physics = {} }\r\n  opt.physics.solver = \"forceAtlas2Based\"\r\n  let atlas;\r\n  if (!(\"forceAtlas2Based\" in opt.physics)) {\r\n    atlas = {}\r\n    opt.physics.forceAtlas2Based = atlas\r\n  } else {\r\n    atlas = opt.physics.forceAtlas2Based\r\n  }\r\n  const defaults = {\r\n    gravitationalConstant: -20,\r\n    centralGravity: 0.002,\r\n    springLength: 100,\r\n    springConstant: 0.01,\r\n  }\r\n  for (const [k, v] of Object.entries(defaults)) {\r\n    if (!(k in atlas)) {\r\n      atlas[k] = v\r\n    }\r\n  }\r\n  if (!(\"edges\" in opt)) { opt.edges = {} }\r\n  if (!(\"font\" in opt.edges)) { opt.edges.font = {} }\r\n  if (!(\"size\" in opt.edges.font)) { opt.edges.font.size = 14 }\r\n  return opt\r\n}\r\n\r\n\r\ntype sliderProps = {\r\n  setOpt: (opt: any) => void,\r\n  getOpt: () => any,\r\n}\r\n\r\nconst GravitationalConstantSlider = (props: sliderProps) => {\r\n  const opt = defaultOpt(props.getOpt())\r\n  let atlas = opt.physics.forceAtlas2Based\r\n  const [value, setValue] = useState(atlas.gravitationalConstant)\r\n\r\n  const handleChange = (event: any, newValue: number | number[]) => {\r\n    atlas.gravitationalConstant = newValue\r\n    setValue(newValue)\r\n    props.setOpt(opt)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Typography gutterBottom>\r\n        引力常数\r\n      </Typography>\r\n      <Slider\r\n        value={value}\r\n        onChange={handleChange}\r\n        min={-100}\r\n        max={0}\r\n        valueLabelDisplay=\"auto\"\r\n        aria-labelledby=\"continuous-slider\"\r\n      />\r\n    </>\r\n  )\r\n}\r\n\r\nconst SpringConstantSlider = (props: sliderProps) => {\r\n  const opt = defaultOpt(props.getOpt())\r\n  let atlas = opt.physics.forceAtlas2Based\r\n  const [value, setValue] = useState(Math.log10(atlas.springConstant))\r\n\r\n  const handleChange = (event: any, newValue: number | number[]) => {\r\n    const newVal = 10**(newValue as number)\r\n    atlas.springConstant = newVal\r\n    setValue(newValue as number)\r\n    props.setOpt(opt)\r\n  }\r\n\r\n  const labelFormat = (value: number) => {\r\n    return \"1e^\" + value\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Typography gutterBottom>\r\n        弹簧常数\r\n      </Typography>\r\n      <Slider\r\n        value={value}\r\n        onChange={handleChange}\r\n        step={0.5}\r\n        min={-5}\r\n        max={0}\r\n        valueLabelDisplay=\"auto\"\r\n        valueLabelFormat={labelFormat}\r\n        aria-labelledby=\"non-linear-slider\"\r\n      />\r\n    </>\r\n  )\r\n}\r\n\r\nconst CustomSwitch = withStyles({\r\n  switchBase: {\r\n    color: \"#3f51b5\",\r\n    '&$checked': {\r\n      color: \"#3f51b5\",\r\n    },\r\n    '&$checked + $track': {\r\n      backgroundColor: \"#3f51b5\",\r\n    },\r\n  },\r\n  checked: {},\r\n  track: {},\r\n})(Switch);\r\n\r\n\r\nconst PhysicsSwitch = (props: sliderProps) => {\r\n  const opt = defaultOpt(props.getOpt())\r\n  const [value, setValue] = useState(opt.physics.enabled)\r\n\r\n  const handleChange = (event: any) => {\r\n    const checked = event.target.checked\r\n    opt.physics.enabled = checked\r\n    setValue(checked)\r\n    props.setOpt(opt)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Typography gutterBottom>\r\n        物理效果\r\n      </Typography>\r\n      <CustomSwitch checked={value} onChange={handleChange} name=\"physicsCheck\" />\r\n    </>\r\n  )\r\n\r\n}\r\n\r\n\r\nconst HiddenEdgeLabelSwitch = (props: sliderProps) => {\r\n  const opt = defaultOpt(props.getOpt())\r\n  const [value, setValue] = useState(opt.edges.font.size === 0)\r\n\r\n  const handleChange = (event: any) => {\r\n    const checked = event.target.checked\r\n    if (checked) {\r\n      opt.edges.font.size = 0\r\n    } else {\r\n      opt.edges.font.size = 14\r\n    }\r\n    setValue(checked)\r\n    props.setOpt(opt)\r\n    console.log(opt)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Typography gutterBottom>\r\n        隐藏边标签\r\n      </Typography>\r\n      <CustomSwitch checked={value} onChange={handleChange} name=\"hiddenEdgeLabelCheck\" />\r\n    </>\r\n  )\r\n\r\n}\r\n\r\n\r\ntype TuneDialogProps = {\r\n  setOpt: (opt: any) => void,\r\n  getOpt: () => any,\r\n}\r\ntype TuneDialogState = {\r\n  open: boolean\r\n}\r\n\r\nclass TuneDialog extends React.Component<TuneDialogProps, TuneDialogState> {\r\n  constructor(props: TuneDialogProps) {\r\n    super(props)\r\n    this.state = {\r\n      open: false,\r\n    }\r\n  }\r\n\r\n  handleClickOpen() {\r\n    this.setState({open: true})\r\n  };\r\n\r\n  handleClose() {\r\n    this.setState({open: false})\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Tooltip title=\"视图调整\" placement=\"top\">\r\n          <TuneIcon onClick={() => this.handleClickOpen()}/>\r\n        </Tooltip>\r\n        <Dialog open={this.state.open} onClose={() => {this.handleClose()}} aria-labelledby=\"form-dialog-title\">\r\n          <DialogTitle id=\"form-dialog-title\">网络视图调整</DialogTitle>\r\n          <DialogContent id=\"tuneDialog\">\r\n            <PhysicsSwitch\r\n              setOpt={this.props.setOpt}\r\n              getOpt={this.props.getOpt}/>\r\n            <GravitationalConstantSlider\r\n              setOpt={this.props.setOpt}\r\n              getOpt={this.props.getOpt}/>\r\n            <SpringConstantSlider\r\n              setOpt={this.props.setOpt}\r\n              getOpt={this.props.getOpt}/>\r\n            <HiddenEdgeLabelSwitch\r\n              setOpt={this.props.setOpt}\r\n              getOpt={this.props.getOpt}/>\r\n          </DialogContent>\r\n        </Dialog>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nconst InforBoardSwitch = (props: {switchState: boolean, setSwitch: (on: boolean) => void}) => {\r\n  const handleChange = (event: any) => {\r\n    const checked = event.target.checked\r\n    props.setSwitch(checked)\r\n  }\r\n\r\n  return (\r\n    <FormControlLabel\r\n      control={<CustomSwitch checked={props.switchState} onChange={handleChange} name=\"inforBoardCheck\" />}\r\n      label=\"弹出信息\"\r\n      labelPlacement=\"start\"\r\n    />\r\n    \r\n  )\r\n}\r\n\r\n\r\nconst HiddenUnselectedSwitch = (props: {switchState: boolean, setSwitch: (on: boolean) => void}) => {\r\n  const handleChange = (event: any) => {\r\n    const checked = event.target.checked\r\n    props.setSwitch(checked)\r\n  }\r\n\r\n  return (\r\n    <FormControlLabel\r\n      control={<CustomSwitch checked={props.switchState} onChange={handleChange} name=\"hiddenUnselectedCheck\" />}\r\n      label=\"隐藏未选中节点\"\r\n      labelPlacement=\"start\"\r\n    />\r\n    \r\n  )\r\n}\r\n\r\n\r\ntype SettingDialogProps = {\r\n  inforBoardSwitch: boolean,\r\n  setInforBoardSwitch: (on: boolean) => void,\r\n  hiddenUnselectedSwitch: boolean,\r\n  setHiddenUnselectedSwitch: (on: boolean) => void,\r\n}\r\ntype SettingDialogState = {\r\n  open: boolean\r\n}\r\n\r\nclass SettingDialog extends React.Component<SettingDialogProps, SettingDialogState> {\r\n  constructor(props: SettingDialogProps) {\r\n    super(props)\r\n    this.state = {\r\n      open: false\r\n    }\r\n  }\r\n\r\n  handleClickOpen() {\r\n    this.setState({open: true})\r\n  };\r\n\r\n  handleClose() {\r\n    this.setState({open: false})\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Tooltip title=\"设置\" placement=\"top\">\r\n          <SettingsIcon onClick={() => this.handleClickOpen()}/>\r\n        </Tooltip>\r\n        <Dialog open={this.state.open} onClose={() => {this.handleClose()}} aria-labelledby=\"form-dialog-title\">\r\n          <DialogTitle id=\"form-dialog-title\">设置</DialogTitle>\r\n          <DialogContent id=\"tuneDialog\">\r\n            <InforBoardSwitch\r\n              switchState={this.props.inforBoardSwitch}\r\n              setSwitch={this.props.setInforBoardSwitch}\r\n            />\r\n            <HiddenUnselectedSwitch\r\n              switchState={this.props.hiddenUnselectedSwitch}\r\n              setSwitch={this.props.setHiddenUnselectedSwitch}\r\n            />\r\n          </DialogContent>\r\n        </Dialog>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport { EditOptionsDialog, SearchDialog, FilterDialog, TuneDialog, SettingDialog }\r\n","import React from 'react'\r\nimport Draggable from 'react-draggable';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nimport { shorterString } from './utils'\r\nimport { NodeType, CatType, Pos2d } from './datatypes'\r\n\r\n\r\ntype infoBoardProps = {\r\n  pos: Pos2d,\r\n  node: NodeType,\r\n  cats: Record<string, CatType>,\r\n  close: () => void,\r\n}\r\n\r\nexport default (props: infoBoardProps) => {\r\n  const node = props.node\r\n  const pos = props.pos\r\n  let cat = props.cats[node.categorie]\r\n  const boardStyle = {\r\n    top: pos.y + \"px\",\r\n    left: pos.x + \"px\",\r\n  }\r\n  const catStyle = 'color' in cat ? {color: cat.color} : {}\r\n  return (\r\n    <Draggable>\r\n      <div className=\"infoBoard\" style={boardStyle}>\r\n        <CloseIcon className=\"closeButton\" onClick={() => props.close()} />\r\n        <div className=\"content\">\r\n          <img src={('image' in node) ? node.image : ''} alt=\"\"/>\r\n          <div className=\"title\">\r\n            <div className=\"name\">\r\n              {node.label}\r\n            </div>\r\n            <div className=\"categorie\" style={catStyle}>\r\n              {(cat !== undefined) ? cat.label : \"\"}\r\n            </div>\r\n          </div>\r\n          <div className=\"describe\">\r\n            { shorterString(node.info, 80) }\r\n          </div>\r\n          {\r\n            ('link' in node) && (node['link'] !== \"\") ?\r\n            <a className=\"link\" href={node.link}>链接</a> :\r\n            null\r\n          }\r\n        </div>\r\n      </div>\r\n    </Draggable>\r\n  )\r\n}\r\n","/** Come from:\r\n *     https://material-ui.com/zh/components/progress/#circular-with-label\r\n */\r\n\r\nimport React from 'react';\r\nimport CircularProgress, { CircularProgressProps } from '@material-ui/core/CircularProgress';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nexport default (props: CircularProgressProps & { value: number }) => {\r\n  if (props.value >= 100) {\r\n    return (<></>)\r\n  }\r\n  return (\r\n    <Box position=\"relative\" display=\"inline-flex\">\r\n      <CircularProgress {...props} />\r\n      <Box\r\n        top={0}\r\n        left={0}\r\n        bottom={0}\r\n        right={0}\r\n        position=\"absolute\"\r\n        display=\"flex\"\r\n        alignItems=\"center\"\r\n        justifyContent=\"center\"\r\n      >\r\n        <Typography variant=\"caption\" component=\"div\" color=\"textSecondary\">\r\n          {`${Math.round( props.value,)}%`}\r\n        </Typography>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n","import React, { useState } from 'react'\r\nimport FullscreenIcon from '@material-ui/icons/Fullscreen'\r\nimport FullscreenExitIcon from '@material-ui/icons/FullscreenExit';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport PhotoCameraIcon from '@material-ui/icons/PhotoCamera';\r\nimport { Network as NetworkType, IdType } from 'vis/index'\r\n\r\n\r\nimport { EditOptionsDialog, SearchDialog, FilterDialog, TuneDialog, SettingDialog } from './Dialogs'\r\nimport { Network, Node, Edge } from 'react-vis-network'\r\nimport { ItemInfo, NodeType, EdgeType, CatType, Pos2d } from './datatypes'\r\nimport InfoBoard from './InfoBoard'\r\nimport CircularProgress from './CircularProgressWithLabel'\r\n\r\n\r\nconst getCanvas = () => document.getElementsByTagName(\"canvas\")[0]\r\n\r\n\r\nconst DefaultNetStyle = {\r\n  NodeColor: \"#66bbff\",\r\n  NodeBorderWidth: 3,\r\n}\r\n\r\n\r\nconst createNode = (n: NodeType, catgories: Record<string, CatType>) => {\r\n  let cat = catgories[n.categorie]\r\n  let color;\r\n  if (cat) {\r\n    color = cat.color\r\n  } else {\r\n    color = DefaultNetStyle.NodeColor\r\n  }\r\n  return (\r\n    <Node key={n.id}\r\n      id={n.id} label={n.label}\r\n      shape=\"circularImage\"\r\n      image={n.image}\r\n      color={color}\r\n      borderWidth={DefaultNetStyle.NodeBorderWidth}\r\n    />\r\n  )\r\n}\r\n\r\nconst createEdge = (e: EdgeType) => {\r\n  let arrows = \"\"\r\n  if (('direction' in e) && (e['direction'] === true)) { arrows = \"to\" }\r\n  return (\r\n    <Edge key={e.id} id={e.id} arrows={arrows}\r\n          from={e.from} to={e.to} label={e.label}\r\n    />\r\n  )\r\n}\r\n\r\n\r\ntype ViewControlProps = {\r\n  setOpt: (opt: any) => void,\r\n  getOpt: () => any,\r\n  captureImg: () => void,\r\n  queryAndFocus: (q: string) => void,\r\n  queryAndFilter: (q: string, reverse: boolean) => void,\r\n  reset: () => void,\r\n  inforBoardSwitch: boolean,\r\n  setInforBoardSwitch: (on: boolean) => void,\r\n  hiddenUnselectedSwitch: boolean,\r\n  setHiddenUnselectedSwitch: (on: boolean) => void,\r\n}\r\n\r\nconst ViewControl = (props: ViewControlProps) => {\r\n  const [fullScreenMode, setFullScreenMode] = useState(false)\r\n  let oriHeight = 300\r\n\r\n  const enterFullScreen = () => {\r\n    let canvas = getCanvas()\r\n    let fullRegion = document.getElementById(\"full-screen-region\")\r\n    fullRegion?.requestFullscreen()\r\n    oriHeight = canvas.clientHeight\r\n    canvas.style.height = window.screen.height + \"px\";\r\n    setFullScreenMode(true)\r\n    document.addEventListener('fullscreenchange', (event) => {\r\n      if (!(document.fullscreenElement)) {\r\n        turnBackSize()\r\n        setFullScreenMode(false)\r\n      }\r\n    });\r\n  }\r\n\r\n  const turnBackSize = () => {\r\n    let canvas = getCanvas()\r\n    canvas.style.height = oriHeight + \"px\"\r\n  }\r\n\r\n  const exitFullScreen = () => {\r\n    document.exitFullscreen()\r\n    turnBackSize()\r\n    setFullScreenMode(false)\r\n  }\r\n\r\n  return (\r\n    <div className=\"viewControl\">\r\n      <SearchDialog queryAndFocus={props.queryAndFocus}/>\r\n      <FilterDialog queryAndFilter={props.queryAndFilter} reset={props.reset}/>\r\n      <Tooltip title=\"截图\" placement=\"top\"><PhotoCameraIcon onClick={() => props.captureImg()}/></Tooltip>\r\n      <TuneDialog setOpt={props.setOpt} getOpt={props.getOpt}/>\r\n      <EditOptionsDialog setOpt={props.setOpt} getOpt={props.getOpt}/>\r\n      <SettingDialog\r\n        inforBoardSwitch={props.inforBoardSwitch}\r\n        setInforBoardSwitch={props.setInforBoardSwitch}\r\n        hiddenUnselectedSwitch={props.hiddenUnselectedSwitch}\r\n        setHiddenUnselectedSwitch={props.setHiddenUnselectedSwitch}\r\n      />\r\n      {fullScreenMode\r\n      ? <Tooltip title=\"退出全屏\" placement=\"top\"><FullscreenExitIcon onClick={exitFullScreen}/></Tooltip>\r\n      : <Tooltip title=\"全屏\" placement=\"top\"><FullscreenIcon onClick={enterFullScreen}/></Tooltip>\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nconst DEFAULT_NETWORK_OPTIONS = {\r\n  autoResize: false,\r\n  nodes: {\r\n    shape: \"dot\",\r\n  },\r\n  physics: {\r\n    enabled: true,\r\n    stabilization: false,\r\n    solver: 'forceAtlas2Based',\r\n    forceAtlas2Based: {\r\n      gravitationalConstant: -20,\r\n      centralGravity: 0.002,\r\n      springLength: 100,\r\n      springConstant: 0.01\r\n    },\r\n  },\r\n  edges: {\r\n    width: 0.3,\r\n    color: {\r\n      inherit: \"to\"\r\n    }\r\n  },\r\n  interaction: {\r\n    hideEdgesOnDrag: false,\r\n    hover: true,\r\n    multiselect: true,\r\n  }\r\n}\r\n\r\ntype NetViewProps = {\r\n  info: ItemInfo,\r\n  setNodes: (nodes: Array<NodeType>) => void,\r\n}\r\n\r\ntype NetworkRef = {\r\n  network: NetworkType\r\n}\r\n\r\ntype NetViewState = {\r\n  infoBoard: JSX.Element | null,\r\n  loadingRatio: number,\r\n  inforBoardSwitch: boolean,\r\n  netRef: React.RefObject<NetworkRef>,\r\n  netOptions: any,\r\n  oldNodes: Array<NodeType>,\r\n  hiddenUnselectedSwitch: boolean,\r\n}\r\n\r\nexport default class NetView extends React.Component<NetViewProps, NetViewState> {\r\n  constructor(props: NetViewProps) {\r\n    super(props)\r\n    this.state = {\r\n      infoBoard: null,\r\n      loadingRatio: 0,\r\n      inforBoardSwitch: true,\r\n      netRef: React.createRef(),\r\n      netOptions: null,\r\n      oldNodes: props.info.data.nodes,\r\n      hiddenUnselectedSwitch: false\r\n    }\r\n  }\r\n\r\n  setHiddenUnselectedSwitch(on: boolean) {\r\n    const oldState = this.state.hiddenUnselectedSwitch\r\n    if ((oldState === true) && (on === false)) {\r\n      this.resetNodes()\r\n    } else if((oldState === false) && (on === true)) {\r\n      this.hiddenNonSelected()\r\n    }\r\n    this.setState({\r\n      hiddenUnselectedSwitch: on\r\n    })\r\n  }\r\n\r\n  handlePopup (params: any) {\r\n    const network = (this.state.netRef.current as NetworkRef).network\r\n    const node_id = network.getNodeAt(params.pointer.DOM)\r\n    const select_node = (typeof node_id !== \"undefined\")\r\n    console.log(node_id)\r\n    const pos: Pos2d = {x: 20, y: 20}\r\n\r\n    const create_board = () => {\r\n      let node = this.props.info.data.nodes.find((n) => (n.id === node_id))\r\n      return <InfoBoard pos={pos} node={node as NodeType}\r\n                        cats={this.props.info.categories}\r\n                        close={() => (this.setState({infoBoard: null}))}/>\r\n    }\r\n\r\n    let board = this.state.infoBoard\r\n    if (select_node && (board === null) && this.state.inforBoardSwitch) {\r\n      this.setState({infoBoard: create_board()})\r\n    } else if (select_node && (board !== null) && this.state.inforBoardSwitch) {\r\n      this.setState({infoBoard: create_board()})\r\n    } else if (board !== null ) {\r\n      this.setState({infoBoard: null})\r\n    }\r\n  }\r\n\r\n  handleHidden(params: any) {\r\n    if (!(this.state.hiddenUnselectedSwitch)) {return}\r\n    const select_node = (params.nodes.length > 0)\r\n    if (select_node) {\r\n      this.hiddenNonSelected()\r\n    } else {\r\n      this.resetNodes()\r\n    }\r\n  }\r\n\r\n  handleClick(params: any) {\r\n    this.handlePopup(params)\r\n    this.handleHidden(params)\r\n  }\r\n\r\n  setInforBoardSwitch(on: boolean) {\r\n    this.setState({\r\n      inforBoardSwitch: on\r\n    })\r\n  }\r\n\r\n  setNetOptions(options: any) {\r\n    let network = (this.state.netRef.current as NetworkRef).network\r\n    network.setOptions(options)\r\n    this.setState({netOptions: options})\r\n  }\r\n\r\n  getNetOptions() {\r\n    return this.state.netOptions\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setNetOptions(DEFAULT_NETWORK_OPTIONS)\r\n    this.registerLoading()\r\n  }\r\n\r\n  createNetwork() {\r\n    let info = this.props.info\r\n    const network = (\r\n      <>\r\n      {this.createLoadindBar()}\r\n      <Network ref={this.state.netRef} onClick={(params: any) => {this.handleClick(params)}} >\r\n        {info.data.nodes.map(n => createNode(n, info.categories))}\r\n        {info.data.edges.map((e) => createEdge(e))}\r\n      </Network>\r\n      </>\r\n    )\r\n    return network\r\n  }\r\n\r\n  createLoadindBar() {\r\n    return (\r\n      <div id=\"progressBar\">\r\n        <CircularProgress variant=\"determinate\" value={this.state.loadingRatio * 100}/>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  registerLoading() {\r\n    // https://jsfiddle.net/api/post/library/pure/\r\n    const self = this\r\n    const ref = (this.state.netRef.current as NetworkRef).network\r\n    ref.on(\"stabilizationProgress\", function (params: any) {\r\n      const ratio = params.iterations / params.total;\r\n      self.setState({loadingRatio: ratio})\r\n    })\r\n    ref.once(\"stabilizationIterationsDone\", function () {\r\n      self.setState({loadingRatio: 1})\r\n    })\r\n  }\r\n\r\n  captureImg() {\r\n    const canvas = getCanvas()\r\n    // Fill the canvas background, see: \r\n    //   https://stackoverflow.com/questions/50104437/set-background-color-to-save-canvas-chart\r\n    const context = canvas.getContext('2d')\r\n    if (context !== null) {\r\n      context.save()\r\n      context.globalCompositeOperation = 'destination-over'\r\n      context.fillStyle = \"#ffffff\"\r\n      context.fillRect(0, 0, canvas.width, canvas.height)\r\n      context.restore()\r\n    }\r\n\r\n    const img = canvas.toDataURL(\"image/png\", 1.0)\r\n    const url = img.replace(/^data:image\\/[^;]/, 'data:application/octet-stream')\r\n    let a = document.createElement('a');\r\n    a.download = \"network.png\";\r\n    a.href = url\r\n    a.target = '_blank';\r\n    document.body.appendChild(a);\r\n    a.click();\r\n    document.body.removeChild(a);\r\n  }\r\n\r\n  queryNodes(q:string, reverse:boolean = false) {\r\n    let query_type = \"label\"\r\n    let query_text = \"\"\r\n    const items = q.split(\":\")\r\n    if (items.length === 1) {\r\n      query_text = items[0]\r\n    } else if (items.length === 2) {\r\n      query_type = items[0]\r\n      query_text = items[1].trim()\r\n    } else {\r\n      return []\r\n    }\r\n    let res = []\r\n    const nodes = this.props.info.data.nodes\r\n    const toggle = (cond: boolean) => reverse ? (!cond) : cond\r\n    try {\r\n      const pattern = new RegExp(query_text)\r\n      for (let n of nodes) {\r\n        if (!(query_type in n)) {continue}\r\n        const val = (n as any)[query_type]\r\n        if (query_type === \"id\") {\r\n          if (toggle(val === parseInt(query_text))) {\r\n            res.push(n)\r\n          }\r\n        } else {\r\n          if (toggle(pattern.test(String(val)))) {\r\n            res.push(n)\r\n          }\r\n        }\r\n      }\r\n      return res\r\n    } catch(e) {\r\n      console.log(e)\r\n      return []\r\n    }\r\n  }\r\n\r\n  queryNodesAndFocus(q:string) {\r\n    const nodes = this.queryNodes(q)\r\n    if (nodes.length <= 0) {return}\r\n    const network = (this.state.netRef.current as NetworkRef).network\r\n    network.selectNodes([])\r\n    const nodes_id = nodes.map(n => String(n.id))\r\n    if (nodes.length > 1) {\r\n      network.fit({nodes: nodes_id, animation: true})\r\n    } else {\r\n      network.focus(nodes_id[0], {scale: 1, animation: true})\r\n    }\r\n    network.selectNodes(nodes_id)\r\n  }\r\n\r\n  queryNodesAndFilter(q:string, reverse:boolean) {\r\n    const nodes = this.queryNodes(q, reverse)\r\n    this.props.setNodes(nodes)\r\n  }\r\n\r\n  resetNodes() {\r\n    this.props.setNodes(this.state.oldNodes)\r\n  }\r\n\r\n  getSelectedClosure() {\r\n    const network = (this.state.netRef.current as NetworkRef).network\r\n    const selected = network.getSelectedNodes()\r\n    let closure: Set<IdType> = new Set();\r\n    for (const nid of selected) {\r\n      closure.add( parseInt(String(nid)) )\r\n      const connected = network.getConnectedNodes(nid)\r\n      for (const nid2 of (connected as IdType[])) {\r\n        closure.add( parseInt(String(nid2)) )\r\n      }\r\n    }\r\n    return closure\r\n  }\r\n\r\n  hiddenNonSelected() {\r\n    this.resetNodes()\r\n    const closure = this.getSelectedClosure()\r\n    let nodes = []\r\n    for (const n of this.state.oldNodes) {\r\n      if (closure.has(n.id)) {\r\n        nodes.push(n)\r\n      }\r\n    }\r\n    this.props.setNodes(nodes)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"netView\">\r\n        <div className=\"canvas-wrap\" id=\"full-screen-region\">\r\n          {this.createNetwork()}\r\n          {this.state.infoBoard}\r\n          <ViewControl\r\n            setOpt={this.setNetOptions.bind(this)}\r\n            getOpt={this.getNetOptions.bind(this)}\r\n            captureImg={this.captureImg.bind(this)}\r\n            queryAndFocus={this.queryNodesAndFocus.bind(this)}\r\n            queryAndFilter={this.queryNodesAndFilter.bind(this)}\r\n            reset={this.resetNodes.bind(this)}\r\n            inforBoardSwitch={this.state.inforBoardSwitch}\r\n            setInforBoardSwitch={this.setInforBoardSwitch.bind(this)}\r\n            hiddenUnselectedSwitch={this.state.hiddenUnselectedSwitch}\r\n            setHiddenUnselectedSwitch={this.setHiddenUnselectedSwitch.bind(this)}\r\n          />\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","/**\r\n * Modified from this:\r\n *   https://material-ui.com/zh/components/slider/#custom-marks\r\n */\r\nimport React from 'react';\r\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\r\nimport Slider from '@material-ui/core/Slider';\r\n\r\nimport { TimePoint } from './datatypes';\r\n\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      width: 400,\r\n    },\r\n    margin: {\r\n      height: theme.spacing(3),\r\n    },\r\n  }),\r\n);\r\n\r\ntype TimeSliderProps = {\r\n    time: number,\r\n    timePoints: Array<TimePoint>,\r\n    setTime: (t: number) => void,\r\n}\r\n\r\nexport default (props: TimeSliderProps) => {\r\n  if (props.timePoints.length < 2) { return (<></>) }\r\n  const classes = useStyles();\r\n\r\n  let i = -1;\r\n  const marks = props.timePoints.map(t => {\r\n    i += 1\r\n    return {\r\n      value: i,\r\n      label: t.label\r\n    }\r\n  })\r\n\r\n  const handleChange = (event: any, newValue: number | number[]) => {\r\n    const t = newValue as number\r\n    props.setTime(t)\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root+\" timeSlider\"}>\r\n        <div className=\"label\">时间轴</div>\r\n        <div className=\"slider\">\r\n          <Slider\r\n            defaultValue={props.time}\r\n            aria-labelledby=\"discrete-slider-custom\"\r\n            min={0}\r\n            max={props.timePoints.length-1}\r\n            step={null}\r\n            valueLabelDisplay=\"off\"\r\n            marks={marks}\r\n            onChange={handleChange}\r\n          />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","// Implement the Table style editor of nodes, edges and categories\r\n//\r\n// This file is copy then modified from devexetreme-reactive demo:\r\n//   https://devexpress.github.io/devextreme-reactive/react/grid/demos/featured/data-editing/\r\n\r\nimport React from 'react';\r\nimport {\r\n  SortingState, EditingState, PagingState, SummaryState,\r\n  IntegratedPaging, IntegratedSorting,\r\n} from '@devexpress/dx-react-grid';\r\nimport {\r\n  Grid,\r\n  Table, TableHeaderRow, TableEditRow, TableEditColumn,\r\n  PagingPanel, TableColumnReordering,\r\n  TableFixedColumns, \r\n} from '@devexpress/dx-react-grid-material-ui';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Input from '@material-ui/core/Input';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport TableCell from '@material-ui/core/TableCell';\r\n\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\n\r\nconst styles = theme => ({\r\n  lookupEditCell: {\r\n    padding: theme.spacing(1),\r\n  },\r\n  dialog: {\r\n    width: 'calc(100% - 16px)',\r\n  },\r\n  inputRoot: {\r\n    width: '100%',\r\n  },\r\n  selectMenu: {\r\n    position: 'absolute !important',\r\n  },\r\n});\r\n\r\nconst AddButton = ({ onExecute }) => (\r\n  <div style={{ textAlign: 'center' }}>\r\n    <Button\r\n      color=\"primary\"\r\n      onClick={onExecute}\r\n      title=\"Create new row\"\r\n    >\r\n      New\r\n    </Button>\r\n  </div>\r\n);\r\n\r\nconst EditButton = ({ onExecute }) => (\r\n  <IconButton onClick={onExecute} title=\"Edit row\">\r\n    <EditIcon />\r\n  </IconButton>\r\n);\r\n\r\nconst DeleteButton = ({ onExecute }) => (\r\n  <IconButton\r\n    onClick={() => {\r\n      // eslint-disable-next-line\r\n      if (window.confirm('Are you sure you want to delete this row?')) {\r\n        onExecute();\r\n      }\r\n    }}\r\n    title=\"Delete row\"\r\n  >\r\n    <DeleteIcon />\r\n  </IconButton>\r\n);\r\n\r\nconst CommitButton = ({ onExecute }) => (\r\n  <IconButton onClick={onExecute} title=\"Save changes\">\r\n    <SaveIcon />\r\n  </IconButton>\r\n);\r\n\r\nconst CancelButton = ({ onExecute }) => (\r\n  <IconButton color=\"secondary\" onClick={onExecute} title=\"Cancel changes\">\r\n    <CancelIcon />\r\n  </IconButton>\r\n);\r\n\r\nconst commandComponents = {\r\n  add: AddButton,\r\n  edit: EditButton,\r\n  delete: DeleteButton,\r\n  commit: CommitButton,\r\n  cancel: CancelButton,\r\n};\r\n\r\nconst Command = ({ id, onExecute }) => {\r\n  const CommandButton = commandComponents[id];\r\n  return (\r\n    <CommandButton\r\n      onExecute={onExecute}\r\n    />\r\n  );\r\n};\r\n\r\nconst availableValues = {\r\n  categorie: [\"person\", \"organization\"],\r\n  direction: [\"true\", \"false\"]\r\n};\r\n\r\nconst LookupEditCellBase = ({\r\n  availableColumnValues, value, onValueChange, classes,\r\n}) => (\r\n  <TableCell\r\n    className={classes.lookupEditCell}\r\n  >\r\n    <Select\r\n      value={value}\r\n      onChange={event => onValueChange(event.target.value)}\r\n      MenuProps={{\r\n        className: classes.selectMenu,\r\n      }}\r\n      input={(\r\n        <Input\r\n          classes={{ root: classes.inputRoot }}\r\n        />\r\n      )}\r\n    >\r\n      {availableColumnValues.map(item => (\r\n        <MenuItem key={item} value={item}>\r\n          {item}\r\n        </MenuItem>\r\n      ))}\r\n    </Select>\r\n  </TableCell>\r\n);\r\nexport const LookupEditCell = withStyles(styles, { name: 'ControlledModeDemo' })(LookupEditCellBase);\r\n\r\nconst EditCell = (props) => {\r\n  const { column } = props;\r\n  const availableColumnValues = availableValues[column.name];\r\n  if (availableColumnValues) {\r\n    return <LookupEditCell {...props} availableColumnValues={availableColumnValues} />;\r\n  }\r\n  return <TableEditRow.Cell {...props} />;\r\n};\r\n\r\nconst getRowId = row => row.id;\r\n\r\n/**\r\n * Generate an Editable Grid object\r\n */\r\nconst createGrid = (colDef, getParentState, widthDef, colOrder, defaultDef, setParentState) => {\r\n\r\n  class TheGrid extends React.Component {\r\n    \r\n    constructor(props) {\r\n      super(props)\r\n      this.state = {\r\n        columns: colDef,\r\n        rows: (typeof getParentState === \"function\") ? getParentState(props) : props[getParentState],\r\n        tableColumnExtensions: widthDef,\r\n        sorting: [],\r\n        editingRowIds: [],\r\n        addedRows: [],\r\n        rowChanges: {},\r\n        currentPage: 0,\r\n        pageSize: 5,\r\n        pageSizes: [5, 10, 0],\r\n        columnOrder: colOrder,\r\n        leftFixedColumns: [TableEditColumn.COLUMN_TYPE],\r\n        totalSummaryItems: []\r\n      }\r\n    }\r\n\r\n    changeAddedRows(value) {\r\n      let defaultRow = {}\r\n      for (const [k, v] of Object.entries(defaultDef)) {\r\n        if (typeof v === \"function\") {\r\n          defaultRow[k] = v(this.state.rows)\r\n        } else {\r\n          defaultRow[k] = v\r\n        }\r\n      }\r\n      console.log(defaultRow)\r\n      this.setState({\r\n        addedRows: value.map(row => (Object.keys(row).length ? row : defaultRow))\r\n      })\r\n    }\r\n\r\n    deleteRows(deletedIds) {\r\n      const rowsForDelete = this.state.rows.slice();\r\n      deletedIds.forEach((rowId) => {\r\n        const index = rowsForDelete.findIndex(row => row.id === rowId);\r\n        if (index > -1) {\r\n          rowsForDelete.splice(index, 1);\r\n        }\r\n      });\r\n      return rowsForDelete;\r\n    }\r\n\r\n    commitChanges({ added, changed, deleted }) {\r\n      const rows = this.state.rows\r\n      let changedRows;\r\n      if (added) {\r\n        const startingAddedId = rows.length > 0 ? rows[rows.length - 1].id + 1 : 0;\r\n        changedRows = [\r\n          ...rows,\r\n          ...added.map((row, index) => ({\r\n            id: startingAddedId + index,\r\n            ...row,\r\n          })),\r\n        ];\r\n      }\r\n      if (changed) {\r\n        changedRows = rows.map(row => (changed[row.id] ? { ...row, ...changed[row.id] } : row));\r\n      }\r\n      if (deleted) {\r\n        changedRows = this.deleteRows(deleted);\r\n      }\r\n      this.setState({\r\n        rows: changedRows\r\n      })\r\n      // change the state of parent component\r\n      setParentState(this.props, changedRows)\r\n    };\r\n\r\n  /**\r\n   * re-render rows when receive new props, see:\r\n   *   https://stackoverflow.com/questions/41233458/react-child-component-not-updating-after-parent-state-change\r\n   */\r\n  componentWillReceiveProps(nextProps) {\r\n    const newRows = (typeof getParentState === \"function\") ? getParentState(nextProps) : nextProps[getParentState]\r\n    this.setState({ rows: newRows });  \r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Paper>\r\n        <Grid\r\n          rows={this.state.rows}\r\n          columns={this.state.columns}\r\n          getRowId={getRowId}\r\n        >\r\n          <SortingState\r\n            sorting={this.state.sorting}\r\n            onSortingChange={(s) => {this.setState({sorting: s})}}\r\n          />\r\n          <PagingState\r\n            currentPage={this.state.currentPage}\r\n            onCurrentPageChange={(c) => this.setState({currentPage: c})}\r\n            pageSize={this.state.pageSize}\r\n            onPageSizeChange={(s) => this.setState({pageSize: s})}\r\n          />\r\n          <EditingState\r\n            editingRowIds={this.state.editingRowIds}\r\n            onEditingRowIdsChange={(ids) => {this.setState({editingRowIds: ids})}}\r\n            rowChanges={this.state.rowChanges}\r\n            onRowChangesChange={(c) => {this.setState({rowChanges: c})}}\r\n            addedRows={this.state.addedRows}\r\n            onAddedRowsChange={this.changeAddedRows.bind(this)}\r\n            onCommitChanges={this.commitChanges.bind(this)}\r\n          />\r\n          <SummaryState\r\n            totalItems={this.state.totalSummaryItems}\r\n          />\r\n\r\n          <IntegratedSorting />\r\n          <IntegratedPaging />\r\n\r\n          <Table\r\n            columnExtensions={this.state.tableColumnExtensions}\r\n          />\r\n          <TableColumnReordering\r\n            order={this.state.columnOrder}\r\n            onOrderChange={(c) => this.setState({columnOrder: c})}\r\n          />\r\n          <TableHeaderRow showSortingControls />\r\n          <TableEditRow\r\n            cellComponent={EditCell}\r\n          />\r\n          <TableEditColumn\r\n            width={150}\r\n            showAddCommand={!this.state.addedRows.length}\r\n            showEditCommand\r\n            showDeleteCommand\r\n            commandComponent={Command}\r\n          />\r\n          <TableFixedColumns\r\n            leftColumns={this.state.leftFixedColumns}\r\n          />\r\n          <PagingPanel\r\n            pageSizes={this.state.pageSizes}\r\n          />\r\n        </Grid>\r\n      </Paper>\r\n    );\r\n  }\r\n\r\n  }\r\n\r\n  return TheGrid\r\n\r\n}\r\n\r\nconst NodeGrid = createGrid(\r\n  [\r\n    { name: 'id', title: 'ID' },\r\n    { name: 'label', title: '标签' },\r\n    { name: 'categorie', title: '类别' },\r\n    { name: 'info', title: '信息' },\r\n    { name: 'image', title: '图片' },\r\n    { name: 'link', title: '链接' },\r\n  ],\r\n  \"nodes\",\r\n  [\r\n    { columnName: 'id', width: 80 },\r\n    { columnName: 'label', width: 100 },\r\n    { columnName: 'categorie', width: 100},\r\n    { columnName: 'info', width: 300 },\r\n    { columnName: 'image', width: 200 },\r\n    { columnName: 'link', width: 200 },\r\n  ],\r\n  ['id', 'label', 'categorie', 'info', 'image', 'link'],\r\n  {\r\n    id: (rows) => (rows.length > 0) ? Math.max(...rows.map((r) => r.id)) + 1 : 0,\r\n    label: \"\",\r\n    categorie: availableValues.categorie[0],\r\n    info: \"\",\r\n    image: \"\",\r\n    link: \"\"\r\n  },\r\n  (props, changedRows) => {props.setNodes(changedRows.map((r) => {return {...r, id: parseInt(String(r.id))}}))}\r\n)\r\n\r\nconst reprEdges = (edges) => edges.map((e_) => {\r\n  let e = Object.assign({}, e_)\r\n  e.direction = String(e.direction)\r\n  return e\r\n})\r\n\r\nconst recoverEdges = (rows) => rows.map((e_) => {\r\n  let e = Object.assign({}, e_)\r\n  e.id = parseInt(String(e.id))\r\n  e.direction = (e.direction === \"false\") ? false : true\r\n  return e\r\n})\r\n\r\nconst EdgeGrid = createGrid(\r\n  [\r\n    { name: 'id', title: 'ID' },\r\n    { name: 'from', title: 'from' },\r\n    { name: 'to', title: 'to' },\r\n    { name: 'label', title: '标签' },\r\n    { name: 'direction', title: '有向？' }\r\n  ],\r\n  (props) => reprEdges(props.edges),\r\n  [\r\n    { columnName: 'id', width: 100 },\r\n    { columnName: 'from', width: 100 },\r\n    { columnName: 'to', width: 100},\r\n    { columnName: 'label', width: 120 },\r\n    { columnName: 'direction', width: 100 },\r\n  ],\r\n  ['id', 'from', 'to', 'label', 'direction'],\r\n  {\r\n    id: (rows) => (rows.length > 0) ? Math.max(...rows.map((r) => r.id)) + 1 : 0,\r\n    label: \"\",\r\n    direction: availableValues.direction[0],\r\n    info: \"\",\r\n    image: \"\",\r\n    link: \"\"\r\n  },\r\n  (props, changedRows) => {props.setEdges(recoverEdges(changedRows))}\r\n)\r\n\r\nconst reprCats = (cats) => {\r\n  let rows = []\r\n  for (const [k, v] of Object.entries(cats)) {\r\n    let row = Object.assign({id: k}, v)\r\n    rows.push(row)\r\n  }\r\n  return rows\r\n}\r\n\r\nconst recoverCats = (rows) => {\r\n  let cats = {}\r\n  for (const r of rows) {\r\n    let v = Object.assign({}, r)\r\n    delete v.id\r\n    cats[r.id] = v\r\n  }\r\n  return cats\r\n}\r\n\r\nconst CatGrid = createGrid(\r\n  [\r\n    { name: 'id', title: 'ID' },\r\n    { name: 'label', title: '标签' },\r\n    { name: 'color', title: '颜色' }\r\n  ],\r\n  (props) => {\r\n    const cats = props.cats\r\n    availableValues.categorie = Object.keys(cats)\r\n    return reprCats(cats)\r\n  },\r\n  [\r\n    { columnName: 'id', width: 200 },\r\n    { columnName: 'label', width: 200 },\r\n    { columnName: 'color', width: 200},\r\n  ],\r\n  ['id', 'label', 'color'],\r\n  {\r\n    id: \"\",\r\n    label: \"\",\r\n    color: \"#aaaaaa\"\r\n  },\r\n  (props, changedRows) => {\r\n    availableValues.categorie = changedRows.map((r) => r.id)\r\n    props.setCats(recoverCats(changedRows))\r\n  }\r\n)\r\n\r\nexport { NodeGrid, EdgeGrid, CatGrid }\r\n","import React, {Component} from \"react\";\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\n\r\n\r\ntype CommentsProps = {\r\n  issueTerm: string,\r\n}\r\n\r\n/**\r\n * Reference:\r\n *   + https://github.com/utterance/utterances/issues/161\r\n *   + https://material-ui.com/zh/components/accordion/\r\n */\r\nexport default class Comments extends Component<CommentsProps, {}> {\r\n\r\n  componentDidMount () {\r\n      let script = document.createElement(\"script\");\r\n      let anchor = document.getElementById(\"inject-comments-for-uterances\");\r\n      if (anchor !== null) {\r\n        script.setAttribute(\"src\", \"https://utteranc.es/client.js\");\r\n        script.setAttribute(\"crossorigin\", \"anonymous\");\r\n        script.setAttribute(\"async\", \"true\");\r\n        script.setAttribute(\"repo\", \"AniNet-Project/aninet-project.github.io\");\r\n        script.setAttribute(\"issue-term\", this.props.issueTerm);\r\n        script.setAttribute( \"theme\", \"github-light\");\r\n        anchor.appendChild(script);\r\n      }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <>\r\n          <div className=\"comments\">\r\n\r\n          <Accordion>\r\n            <AccordionSummary\r\n              expandIcon={<ExpandMoreIcon />}\r\n              aria-controls=\"panel1a-content\"\r\n            >\r\n              <Typography>评论区</Typography>\r\n            </AccordionSummary>\r\n            <AccordionDetails id=\"comments-content\">\r\n              <div id=\"inject-comments-for-uterances\"></div>\r\n            </AccordionDetails>\r\n          </Accordion>\r\n\r\n          </div>\r\n        </>\r\n    );\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs'\r\nimport 'react-tabs/style/react-tabs.css'\r\n\r\nimport './NetPage.css'\r\nimport Header from './Header'\r\nimport Footer from './Footer'\r\nimport ToolBar from './ToolBar'\r\nimport NetView from './NetView'\r\nimport TimeSlider from './TimeSlider'\r\nimport {NetItem, TimePoint, ItemInfo, NodeType, EdgeType, CatType} from './datatypes'\r\nimport { NodeGrid, EdgeGrid, CatGrid } from './EditGrid'\r\nimport Comments from './Comments'\r\n\r\n\r\n\r\nconst preProcessInfo = (info: ItemInfo) => {\r\n  let new_nodes: Array<NodeType> = []\r\n  for (let n of info.data.nodes) {\r\n    n.id = parseInt(String(n.id))\r\n    new_nodes.push(n)\r\n  }\r\n  info.data.nodes = new_nodes\r\n  return info\r\n}\r\n\r\n\r\ntype NetPageProps = {\r\n  item: NetItem\r\n}\r\n\r\ntype NetPageState = {\r\n  error: null | Error,\r\n  isLoaded: boolean,\r\n  timesInfo: Array<ItemInfo>,\r\n  currentTime: number,\r\n  timePoints: Array<TimePoint>,\r\n}\r\n\r\n\r\nclass NetPage extends React.Component<NetPageProps, NetPageState> {\r\n  constructor(props: NetPageProps) {\r\n    super(props)\r\n    this.state = {\r\n      error: null,\r\n      isLoaded: false,\r\n      timesInfo: [],\r\n      currentTime: 0,\r\n      timePoints: [],\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    let item = this.props.item\r\n    let timepoints: Array<TimePoint> = []\r\n    if (typeof item.url === \"string\") {\r\n      timepoints.push({label: \"common\", url: item.url})\r\n    } else {\r\n      timepoints = item.url\r\n    }\r\n    this.setState({timesInfo: new Array(timepoints.length)})\r\n    Promise.all(\r\n      timepoints.map((t) => fetch(t.url).then(resp => resp.json()))\r\n    )\r\n    .then( infos => {\r\n      this.setState({\r\n        isLoaded: true,\r\n        timesInfo: infos.map(info => preProcessInfo(info)),\r\n        timePoints: timepoints,\r\n      })\r\n    },\r\n    (error) => {\r\n      this.setState({\r\n        isLoaded: true,\r\n        error\r\n      })\r\n    })\r\n  }\r\n\r\n  setNodes(nodes: Array<NodeType>) {\r\n    let times = this.state.timesInfo\r\n    let info = times[this.state.currentTime]\r\n    if (info !== null) {\r\n      info.data.nodes = nodes\r\n      this.setState({timesInfo: times})\r\n    }\r\n  }\r\n\r\n  setEdges(edges: Array<EdgeType>) {\r\n    let times = this.state.timesInfo\r\n    let info = times[this.state.currentTime]\r\n    if (info !== null) {\r\n      info.data.edges = edges\r\n      this.setState({timesInfo: times})\r\n    }\r\n  }\r\n\r\n  setCategories(categories: Record<string, CatType>) {\r\n    let times = this.state.timesInfo\r\n    let info = times[this.state.currentTime]\r\n    if (info != null) {\r\n      info.categories = categories\r\n      this.setState({timesInfo: times})\r\n    }\r\n  }\r\n\r\n  setInfo(info: ItemInfo) {\r\n    let times = this.state.timesInfo\r\n    times[this.state.currentTime] = info\r\n    this.setState({timesInfo: times})\r\n  }\r\n\r\n  setCurrentTime(t: number) {\r\n    this.setState({currentTime: t})\r\n  }\r\n\r\n  render() {\r\n    let item = this.props.item\r\n    const { error, isLoaded, timesInfo, currentTime } = this.state\r\n    if (error) {\r\n      return <div>Error: {error.message}</div>\r\n    } else if (!isLoaded) {\r\n      return <div>Loading...</div>\r\n    } else {\r\n      const info = timesInfo[currentTime]\r\n      return (\r\n        <div>\r\n          <Header title={item.name}/>\r\n          <div className=\"container\">\r\n          <ToolBar info={info} setInfo={this.setInfo.bind(this)}/>\r\n          <div className=\"tabs\">\r\n            <Tabs>\r\n              <TabList>\r\n                <Tab>网络视图</Tab>\r\n                <Tab>节点(Nodes)</Tab>\r\n                <Tab>边(Edges)</Tab>\r\n                <Tab>节点类别</Tab>\r\n              </TabList>\r\n              <TabPanel forceRender={true}>\r\n                <NetView info={info} setNodes={this.setNodes.bind(this)} />\r\n              </TabPanel>\r\n              <TabPanel forceRender={true}>\r\n                <NodeGrid nodes={info.data.nodes} setNodes={this.setNodes.bind(this)}/>\r\n              </TabPanel>\r\n              <TabPanel forceRender={true}>\r\n                <EdgeGrid edges={info.data.edges} setEdges={this.setEdges.bind(this)}/>\r\n              </TabPanel>\r\n              <TabPanel forceRender={true}>\r\n                <CatGrid cats={info.categories} setCats={this.setCategories.bind(this)}/>\r\n              </TabPanel>\r\n            </Tabs>\r\n          </div>\r\n\r\n          <TimeSlider\r\n            time={this.state.currentTime}\r\n            timePoints={this.state.timePoints}\r\n            setTime={this.setCurrentTime.bind(this)}\r\n          />\r\n\r\n          <Comments issueTerm={item.name}/>\r\n\r\n          </div>\r\n          <Footer/>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n}\r\n\r\nexport default NetPage\r\n","/**\r\n * Come from here:\r\n *   https://medium.com/young-developer/react-markdown-code-and-syntax-highlighting-632d2f9b4ada\r\n */\r\n\r\nimport React, { PureComponent } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Prism as SyntaxHighlighter } from \"react-syntax-highlighter\";\r\n\r\ntype CodeBlockProps = {\r\n    language: string,\r\n    value: string,\r\n}\r\n\r\nclass CodeBlock extends PureComponent<CodeBlockProps, {}> {\r\n  static propTypes = {\r\n    value: PropTypes.string.isRequired,\r\n    language: PropTypes.string\r\n  };\r\n\r\n  static defaultProps = {\r\n    language: null\r\n  };\r\n\r\n  render() {\r\n    const { language, value } = this.props;\r\n    return (\r\n      <SyntaxHighlighter language={language}>\r\n        {value}\r\n      </SyntaxHighlighter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CodeBlock;\r\n","import React from 'react'\r\nimport ReactMarkdown from 'react-markdown'\r\n\r\nimport CodeBlock from \"./CodeBlock\"\r\nimport Header from './Header'\r\nimport Footer from './Footer'\r\nimport './DocPage.css'\r\n\r\n\r\ntype DocPageProps = {\r\n  title: string,\r\n  sourceUrl: string,\r\n}\r\ntype DocPageState = {\r\n  error: null | Error,\r\n  isLoaded: boolean,\r\n  content: string | null,\r\n}\r\n\r\n\r\nexport default class DocPage extends React.Component<DocPageProps, DocPageState> {\r\n  constructor(props: DocPageProps) {\r\n    super(props)\r\n    this.state = {\r\n      error: null,\r\n      isLoaded: false,\r\n      content: null,\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const url = this.props.sourceUrl\r\n    fetch(url)\r\n      .then(res => res.text())\r\n      .then((data) => {\r\n        this.setState({\r\n          isLoaded: true,\r\n          content: data\r\n        })\r\n      },\r\n      (error) => {\r\n        this.setState({\r\n          isLoaded: true,\r\n          error\r\n        })\r\n      })\r\n  }\r\n\r\n  render() {\r\n    const { error, isLoaded, content } = this.state\r\n    if (error) {\r\n      return <div>Error: {error.message}</div>\r\n    } else if (!isLoaded) {\r\n      return <div>Loading...</div>\r\n    } else {\r\n      return (\r\n        <>\r\n          <Header title={this.props.title}/>\r\n          <div className=\"container\">\r\n            <div className=\"doc\">\r\n              <ReactMarkdown\r\n                source={content as string}\r\n                renderers={{ code: CodeBlock }}\r\n                escapeHtml={false}\r\n              />\r\n            </div>\r\n          </div>\r\n          <Footer/>\r\n        </>\r\n      )\r\n    }\r\n  }\r\n\r\n}\r\n","import React from 'react';\r\nimport {\r\n  HashRouter as Router,\r\n  Route\r\n} from 'react-router-dom'\r\nimport './App.css';\r\nimport NetPage from './NetPage'\r\nimport Header from './Header'\r\nimport Footer from './Footer'\r\nimport { NetItem } from './datatypes';\r\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport DocPage from './DocPage';\r\n\r\ntype CardProps = {\r\n  item: NetItem\r\n}\r\n\r\nclass Card extends React.Component<CardProps, object> {\r\n  render() {\r\n    let item = this.props.item\r\n    return (\r\n      <a href={\"#/network/\"+item.name}>\r\n      <div className=\"card\">\r\n        <img className=\"titleImg\" src={item.titleImg} alt={item.name}></img>\r\n        <p className=\"name\">{item.name}</p>\r\n      </div>\r\n      </a>\r\n    )\r\n  }\r\n}\r\n\r\nclass NewCard extends React.Component<CardProps, object> {\r\n  render() {\r\n    let item = this.props.item\r\n    return (\r\n        <div className=\"card\" id=\"newCard\">\r\n          <a href={\"#/network/\"+item.name}>\r\n            <Tooltip title=\"新建空白页\" placement=\"top\">\r\n              <IconButton type=\"submit\" id=\"newPageButton\" >\r\n                <AddCircleOutlineIcon id=\"newPageIcon\"/>\r\n              </IconButton>\r\n            </Tooltip>\r\n          </a>\r\n        </div>\r\n    )\r\n  }\r\n}\r\n\r\ntype CardsProps = {\r\n  items: Array<NetItem>\r\n}\r\n\r\nclass Cards extends React.Component<CardsProps, object> {\r\n  render() {\r\n    const items = this.props.items\r\n    return (\r\n      <div className=\"cards\">\r\n        {items.map(item => (\r\n          (item.name === \"新建网络\")\r\n          ? <NewCard key={item.name} item={item}/>\r\n          : <Card key={item.name} item={item}/>\r\n        ))}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\ntype HomeProps = {\r\n  items: Array<NetItem>\r\n}\r\n\r\nclass Home extends React.Component<HomeProps, object> {\r\n  render() {\r\n    let items = this.props.items\r\n    return (\r\n      <div className=\"App\">\r\n        <Header title=\"ACG人物关系可视化\"/>\r\n        <div className=\"contents\">\r\n          <div className=\"container\">\r\n            <Cards items={items}/>\r\n          </div>\r\n        </div>\r\n        <Footer/>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\ntype AppProps = {}\r\ntype AppState = {\r\n  error: Error | null,\r\n  isLoaded: boolean,\r\n  items: Array<NetItem>\r\n}\r\n\r\nclass App extends React.Component<AppProps, AppState> {\r\n  constructor(props: AppProps) {\r\n    super(props)\r\n    this.state = {\r\n      error: null,\r\n      isLoaded: false,\r\n      items: []\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch(\"networks.json\")\r\n      .then(res => res.json())\r\n      .then((data) => {\r\n        this.setState({\r\n          isLoaded: true,\r\n          items: data\r\n        })\r\n      },\r\n      (error) => {\r\n        this.setState({\r\n          isLoaded: true,\r\n          error\r\n        })\r\n      })\r\n  }\r\n\r\n  render() {\r\n    let { error, isLoaded, items } = this.state\r\n    const emptyItem = {name: \"新建网络\", titleImg: \"\", url: \"data/empty.json\"}\r\n    items = items.concat([emptyItem])\r\n    if (error) {\r\n      return <div>Error: {error.message}</div>\r\n    } else if (!isLoaded) {\r\n      return <div>Loading...</div>\r\n    } else {\r\n      return (\r\n        <Router basename=\"/\">\r\n          <Route key=\"home\" exact path=\"/\" component={() => <Home items={items}/>} />\r\n          {items.map(item => (\r\n            <Route key={item.name} path={\"/network/\"+item.name}\r\n                   component={() => <NetPage item={item}/>} />\r\n          ))}\r\n          <Route key=\"contribute\" path={\"/contribute\"}\r\n                 component={() => <DocPage title=\"如何贡献\" sourceUrl={\"docs/contribute.md\"}/>} />\r\n          <Route key=\"about\" path={\"/about\"}\r\n                 component={() => <DocPage title=\"关于\" sourceUrl={\"docs/about.md\"}/>}\r\n                 />\r\n        </Router>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}